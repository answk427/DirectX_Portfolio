//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLights[100];   // Offset:    0, size: 6400
    int     dirLight_size = 0;          // Offset: 6400, size:    4
    PointLight gPointLights[100];       // Offset: 6416, size: 8000
    int     pointLight_size = 0;        // Offset: 14416, size:    4
    SpotLight gSpotLights[100];         // Offset: 14432, size: 9600
    int     spotLight_size = 0;         // Offset: 24032, size:    4
    float3  gEyePosW;                   // Offset: 24036, size:   12
    float   gFogStart;                  // Offset: 24048, size:    4
    float   gFogRange;                  // Offset: 24052, size:    4
    float4  gFogColor;                  // Offset: 24064, size:   16
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInvTranspose;        // Offset:   64, size:   64
    float4x4 gViewProj;                 // Offset:  128, size:   64
    float4x4 gWorldViewProj;            // Offset:  192, size:   64
    float4x4 gWorldViewProjTex;         // Offset:  256, size:   64
    float4x4 gTexTransform;             // Offset:  320, size:   64
    float4x4 gShadowTransform;          // Offset:  384, size:   64
    Material gMaterial;                 // Offset:  448, size:   64
    bool    isShadowed;                 // Offset:  512, size:    4
}

cbuffer cbSkinned
{
    float4x4 gBoneTransforms[128];      // Offset:    0, size: 8192
}

//
// 7 local object(s)
//
Texture2D gDiffuseMap;
Texture2D gShadowMap;
Texture2D gSsaoMap;
TextureCube gCubeMap;
Texture2DArray gDiffuseMapArray;
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerComparisonState samShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 47 technique(s)
    //
    technique11 Light1
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samShadow                       sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r2.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r2.x, r2.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r2.x, r2.x  // shadow<0:[0f,1f]>
                else 
                  mov r2.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r3.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r2.w, r6.xyzx, r10.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r9.xyz, r2.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r6.xyzx, r11.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r5.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r0.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r2.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:Inf>
                mov r6.y, r3.y  // ambient<1:Inf>
                mov r6.z, r3.z  // ambient<2:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r2.w, r12.xyzx, r16.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r15.xyz, r2.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r12.xyzx, r17.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r11.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r2.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r2.w, r11.xyzx, r15.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r14.xyz, r2.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r11.xyzx, r16.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r10.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r0.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r2.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r9.xyz, r1.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r2.w, r1.w, cb0[901].x
                  breakc_z r2.w
                
                #line 384
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r1.w, l(5)
                  mov r11.xyz, cb0[r2.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r2.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r2.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r2.w + 404].xyzx  // L<12,13,14>
                  mov r6.w, cb0[r2.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r2.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r2.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r2.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r2.w, r6.w, r16.y
                
                #line 124
                  if_z r2.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r2.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r6.w, l(0.000000), r2.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r7.w, r11.xyzx, r17.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r14.xyz, r7.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r11.xyzx, r18.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r10.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r2.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r9.xyz, r6.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r2.w, r15.xyzx, r16.xyzx
                    div r2.w, l(1.000000), r2.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r2.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r2.w, r1.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r2.w + 0].xyzx
                  mul r9.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r2.y, r1.w, cb0[1502].x
                  breakc_z r2.y
                
                #line 397
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.y, r1.w, l(6)
                  mov r12.xyz, cb0[r2.y + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.y + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.y + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.y + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.y + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.y + 907].xyzx  // L<20,21,22>
                  mov r2.w, cb0[r2.y + 905].w  // L<15>
                  mov r2.y, cb0[r2.y + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r3.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r2.w, r2.w, r18.y
                
                #line 176
                  if_z r2.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r2.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r3.w, l(0.000000), r2.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r4.w, r12.xyzx, r19.xyzx
                    add r4.w, r4.w, r4.w
                    mov r4.w, -r4.w
                    mul r15.xyz, r4.wwww, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r4.w, r15.xyzx, r20.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r4.w, r4.w, r11.w
                    exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r2.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r2.w, r12.xyzx, r16.xyzx
                    max r2.w, r2.w, l(0.000000)
                    log r2.w, r2.w
                    mul r2.y, r2.w, r2.y
                    exp r2.y, r2.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r2.w, r17.xyzx, r18.xyzx
                    div r2.w, r2.y, r2.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.yyyy, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r2.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r2.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r2.y, r1.w
                  mov r2.z, l(1.000000)
                  dp3 r2.y, r2.xzzx, icb[r2.y + 0].xyzx
                  mul r10.xyz, r10.xyzx, r2.yyyy
                  add r4.xyz, r4.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r2.yzw, r11.xxyz, r2.yyyy
                  add r8.xyz, r2.yzwy, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r3.xyzx, r4.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r8.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, cb1[29].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 363 instruction slots used
                            
            };
        }

    }

    technique11 Light2
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samShadow                       sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r2.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r2.x, r2.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r2.x, r2.x  // shadow<0:[0f,1f]>
                else 
                  mov r2.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r3.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r2.w, r6.xyzx, r10.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r9.xyz, r2.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r6.xyzx, r11.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r5.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r0.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r2.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:Inf>
                mov r6.y, r3.y  // ambient<1:Inf>
                mov r6.z, r3.z  // ambient<2:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r2.w, r12.xyzx, r16.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r15.xyz, r2.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r12.xyzx, r17.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r11.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r2.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r2.w, r11.xyzx, r15.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r14.xyz, r2.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r11.xyzx, r16.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r10.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r0.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r2.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r9.xyz, r1.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r2.w, r1.w, cb0[901].x
                  breakc_z r2.w
                
                #line 384
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r1.w, l(5)
                  mov r11.xyz, cb0[r2.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r2.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r2.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r2.w + 404].xyzx  // L<12,13,14>
                  mov r6.w, cb0[r2.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r2.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r2.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r2.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r2.w, r6.w, r16.y
                
                #line 124
                  if_z r2.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r2.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r6.w, l(0.000000), r2.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r7.w, r11.xyzx, r17.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r14.xyz, r7.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r11.xyzx, r18.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r10.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r2.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r9.xyz, r6.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r2.w, r15.xyzx, r16.xyzx
                    div r2.w, l(1.000000), r2.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r2.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r2.w, r1.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r2.w + 0].xyzx
                  mul r9.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r2.y, r1.w, cb0[1502].x
                  breakc_z r2.y
                
                #line 397
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.y, r1.w, l(6)
                  mov r12.xyz, cb0[r2.y + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.y + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.y + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.y + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.y + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.y + 907].xyzx  // L<20,21,22>
                  mov r2.w, cb0[r2.y + 905].w  // L<15>
                  mov r2.y, cb0[r2.y + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r3.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r2.w, r2.w, r18.y
                
                #line 176
                  if_z r2.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r2.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r3.w, l(0.000000), r2.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r4.w, r12.xyzx, r19.xyzx
                    add r4.w, r4.w, r4.w
                    mov r4.w, -r4.w
                    mul r15.xyz, r4.wwww, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r4.w, r15.xyzx, r20.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r4.w, r4.w, r11.w
                    exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r2.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r2.w, r12.xyzx, r16.xyzx
                    max r2.w, r2.w, l(0.000000)
                    log r2.w, r2.w
                    mul r2.y, r2.w, r2.y
                    exp r2.y, r2.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r2.w, r17.xyzx, r18.xyzx
                    div r2.w, r2.y, r2.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.yyyy, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r2.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r2.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r2.y, r1.w
                  mov r2.z, l(1.000000)
                  dp3 r2.y, r2.xzzx, icb[r2.y + 0].xyzx
                  mul r10.xyz, r10.xyzx, r2.yyyy
                  add r4.xyz, r4.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r2.yzw, r11.xxyz, r2.yyyy
                  add r8.xyz, r2.yzwy, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r3.xyzx, r4.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r8.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, cb1[29].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 363 instruction slots used
                            
            };
        }

    }

    technique11 Light3
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samShadow                       sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s0, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r2.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r2.x, r2.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r2.x, r2.x  // shadow<0:[0f,1f]>
                else 
                  mov r2.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r3.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r2.w, r6.xyzx, r10.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r9.xyz, r2.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r6.xyzx, r11.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r5.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r0.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r2.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:Inf>
                mov r6.y, r3.y  // ambient<1:Inf>
                mov r6.z, r3.z  // ambient<2:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r2.w, r12.xyzx, r16.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r15.xyz, r2.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r12.xyzx, r17.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r11.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r2.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r2.w, r11.xyzx, r15.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r14.xyz, r2.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r11.xyzx, r16.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r10.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r0.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r2.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r9.xyz, r1.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r2.w, r1.w, cb0[901].x
                  breakc_z r2.w
                
                #line 384
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r1.w, l(5)
                  mov r11.xyz, cb0[r2.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r2.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r2.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r2.w + 404].xyzx  // L<12,13,14>
                  mov r6.w, cb0[r2.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r2.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r2.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r2.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r2.w, r6.w, r16.y
                
                #line 124
                  if_z r2.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r2.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r6.w, l(0.000000), r2.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r7.w, r11.xyzx, r17.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r14.xyz, r7.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r11.xyzx, r18.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r10.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r2.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r9.xyz, r6.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r2.w, r15.xyzx, r16.xyzx
                    div r2.w, l(1.000000), r2.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r2.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r2.w, r1.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r2.w + 0].xyzx
                  mul r9.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r2.y, r1.w, cb0[1502].x
                  breakc_z r2.y
                
                #line 397
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.y, r1.w, l(6)
                  mov r12.xyz, cb0[r2.y + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.y + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.y + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.y + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.y + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.y + 907].xyzx  // L<20,21,22>
                  mov r2.w, cb0[r2.y + 905].w  // L<15>
                  mov r2.y, cb0[r2.y + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r3.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r2.w, r2.w, r18.y
                
                #line 176
                  if_z r2.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r2.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r3.w, l(0.000000), r2.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r4.w, r12.xyzx, r19.xyzx
                    add r4.w, r4.w, r4.w
                    mov r4.w, -r4.w
                    mul r15.xyz, r4.wwww, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r4.w, r15.xyzx, r20.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r4.w, r4.w, r11.w
                    exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r2.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r2.w, r12.xyzx, r16.xyzx
                    max r2.w, r2.w, l(0.000000)
                    log r2.w, r2.w
                    mul r2.y, r2.w, r2.y
                    exp r2.y, r2.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r2.w, r17.xyzx, r18.xyzx
                    div r2.w, r2.y, r2.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.yyyy, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r2.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r2.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r2.y, r1.w
                  mov r2.z, l(1.000000)
                  dp3 r2.y, r2.xzzx, icb[r2.y + 0].xyzx
                  mul r10.xyz, r10.xyzx, r2.yyyy
                  add r4.xyz, r4.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r2.yzw, r11.xxyz, r2.yyyy
                  add r8.xyz, r2.yzwy, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r3.xyzx, r4.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r8.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, cb1[29].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 363 instruction slots used
                            
            };
        }

    }

    technique11 Light0Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[30], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 329 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 346
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 439
                mul r0.w, r0.w, cb0[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 6 instruction slots used
                            
            };
        }

    }

    technique11 Light1Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r3.w, r7.xyzx, r11.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r10.xyz, r3.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r7.xyzx, r12.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r6.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r0.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r3.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r3.w, r13.xyzx, r17.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r16.xyz, r3.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r13.xyzx, r18.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r12.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r0.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r3.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r3.w, r12.xyzx, r16.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r15.xyz, r3.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r12.xyzx, r17.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r11.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, cb0[901].x
                  breakc_z r3.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(5)
                  mov r12.xyz, cb0[r3.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r3.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r3.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r3.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r3.w, r7.w, r17.y
                
                #line 124
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r3.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r8.w, r12.xyzx, r18.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r15.xyz, r8.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r12.xyzx, r19.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r11.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r8.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r3.w, r16.xyzx, r17.xyzx
                    div r3.w, l(1.000000), r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r3.w, r1.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.y, r1.w, cb0[1502].x
                  breakc_z r3.y
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.y, r1.w, l(6)
                  mov r13.xyz, cb0[r3.y + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.y + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.y + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.y + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.y + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.y + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r3.y + 905].w  // L<15>
                  mov r3.y, cb0[r3.y + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r19.y
                
                #line 176
                  if_z r3.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r5.w, r13.xyzx, r20.xyzx
                    add r5.w, r5.w, r5.w
                    mov r5.w, -r5.w
                    mul r16.xyz, r5.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.w, r16.xyzx, r21.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r5.w, r5.w, r12.w
                    exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r3.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r5.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r4.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r13.xyzx, r17.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.y, r3.w, r3.y
                    exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r3.w, r18.xyzx, r19.xyzx
                    div r3.w, r3.y, r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.yyyy, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r3.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.y, r1.w
                  mov r3.z, l(1.000000)
                  dp3 r3.y, r3.xzzx, icb[r3.y + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.yyyy
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r12.xxyz, r3.yyyy
                  add r9.xyz, r3.yzwy, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 364 instruction slots used
                            
            };
        }

    }

    technique11 Light2Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r3.w, r7.xyzx, r11.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r10.xyz, r3.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r7.xyzx, r12.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r6.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r0.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r3.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r3.w, r13.xyzx, r17.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r16.xyz, r3.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r13.xyzx, r18.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r12.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r0.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r3.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r3.w, r12.xyzx, r16.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r15.xyz, r3.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r12.xyzx, r17.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r11.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, cb0[901].x
                  breakc_z r3.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(5)
                  mov r12.xyz, cb0[r3.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r3.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r3.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r3.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r3.w, r7.w, r17.y
                
                #line 124
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r3.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r8.w, r12.xyzx, r18.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r15.xyz, r8.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r12.xyzx, r19.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r11.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r8.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r3.w, r16.xyzx, r17.xyzx
                    div r3.w, l(1.000000), r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r3.w, r1.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.y, r1.w, cb0[1502].x
                  breakc_z r3.y
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.y, r1.w, l(6)
                  mov r13.xyz, cb0[r3.y + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.y + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.y + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.y + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.y + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.y + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r3.y + 905].w  // L<15>
                  mov r3.y, cb0[r3.y + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r19.y
                
                #line 176
                  if_z r3.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r5.w, r13.xyzx, r20.xyzx
                    add r5.w, r5.w, r5.w
                    mov r5.w, -r5.w
                    mul r16.xyz, r5.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.w, r16.xyzx, r21.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r5.w, r5.w, r12.w
                    exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r3.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r5.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r4.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r13.xyzx, r17.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.y, r3.w, r3.y
                    exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r3.w, r18.xyzx, r19.xyzx
                    div r3.w, r3.y, r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.yyyy, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r3.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.y, r1.w
                  mov r3.z, l(1.000000)
                  dp3 r3.y, r3.xzzx, icb[r3.y + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.yyyy
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r12.xxyz, r3.yyyy
                  add r9.xyz, r3.yzwy, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 364 instruction slots used
                            
            };
        }

    }

    technique11 Light3Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r3.w, r7.xyzx, r11.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r10.xyz, r3.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r7.xyzx, r12.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r6.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r0.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r3.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r3.w, r13.xyzx, r17.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r16.xyz, r3.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r13.xyzx, r18.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r12.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r0.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r3.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r3.w, r12.xyzx, r16.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r15.xyz, r3.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r12.xyzx, r17.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r11.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, cb0[901].x
                  breakc_z r3.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(5)
                  mov r12.xyz, cb0[r3.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r3.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r3.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r3.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r3.w, r7.w, r17.y
                
                #line 124
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r3.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r8.w, r12.xyzx, r18.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r15.xyz, r8.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r12.xyzx, r19.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r11.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r8.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r3.w, r16.xyzx, r17.xyzx
                    div r3.w, l(1.000000), r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r3.w, r1.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.y, r1.w, cb0[1502].x
                  breakc_z r3.y
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.y, r1.w, l(6)
                  mov r13.xyz, cb0[r3.y + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.y + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.y + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.y + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.y + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.y + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r3.y + 905].w  // L<15>
                  mov r3.y, cb0[r3.y + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r19.y
                
                #line 176
                  if_z r3.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r5.w, r13.xyzx, r20.xyzx
                    add r5.w, r5.w, r5.w
                    mov r5.w, -r5.w
                    mul r16.xyz, r5.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.w, r16.xyzx, r21.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r5.w, r5.w, r12.w
                    exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r3.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r5.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r4.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r13.xyzx, r17.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.y, r3.w, r3.y
                    exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r3.w, r18.xyzx, r19.xyzx
                    div r3.w, r3.y, r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.yyyy, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r3.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.y, r1.w
                  mov r3.z, l(1.000000)
                  dp3 r3.y, r3.xzzx, icb[r3.y + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.yyyy
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r12.xxyz, r3.yyyy
                  add r9.xyz, r3.yzwy, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 364 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexInstancing
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WORLD                    0   xyzw        3     NONE  float   xyz 
                // WORLD                    1   xyzw        4     NONE  float   xyz 
                // WORLD                    2   xyzw        5     NONE  float   xyz 
                // WORLD                    3   xyzw        6     NONE  float   xyz 
                // INVTRANSPOSE             0   xyzw        7     NONE  float   xyz 
                // INVTRANSPOSE             1   xyzw        8     NONE  float   xyz 
                // INVTRANSPOSE             2   xyzw        9     NONE  float   xyz 
                // INVTRANSPOSE             3   xyzw       10     NONE  float       
                // COLOR                    0   xyzw       11     NONE  float   xyzw
                // RENDERERIDX              0   x          12     NONE   uint   x   
                // SV_InstanceID            0   x          13   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint   x   
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyz
                dcl_input v5.xyz
                dcl_input v6.xyz
                dcl_input v7.xyz
                dcl_input v8.xyz
                dcl_input v9.xyz
                dcl_input v11.xyzw
                dcl_input v12.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.x
                dcl_temps 8
                
                #line 265 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mul r0.xyz, v0.xxxx, v3.xyzx
                mul r1.xyz, v0.yyyy, v4.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v0.zzzz, v5.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r1.xyz, r0.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                
                #line 268
                mul r2.xyz, v1.xxxx, v7.xyzx
                mul r3.xyz, v1.yyyy, v8.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r3.xyz, v1.zzzz, v9.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx  // vout<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov r3.xyzw, v11.xyzw  // vout<20,21,22,23>
                
                #line 273
                mov r0.w, l(1.000000)
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 276
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 279
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r6.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 282
                dp4 r7.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r7.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r7.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r7.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 285
                mov r0.x, v12.x  // vout<24>
                mov o0.xyzw, r4.xyzw  // InstanceVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r6.xyzw  // InstanceVS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r7.xyzw  // InstanceVS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o6.xyzw, r3.xyzw  // InstanceVS<20,21,22,23>
                mov o1.xyz, r1.xyzx  // InstanceVS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // InstanceVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // InstanceVS<10:NaN:Inf,11:NaN:Inf>
                mov o7.x, r0.x  // InstanceVS<24>
                ret 
                // Approximately 43 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gDiffuseMapArray                  texture  float4     2darray    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float   xyz 
                // instanceID               0   x           7     NONE   uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2darray (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v6.xyz
                dcl_input_ps constant v7.x
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 324
                utof r2.z, v7.x  // uvw<2:[0f,4.29497e+009f]>
                mov r2.xy, v3.xyxx
                sample_indexable(texture2darray)(float,float,float,float) r2.xyzw, r2.xyzx, t1.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r3.w, r7.xyzx, r11.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r10.xyz, r3.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r7.xyzx, r12.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r6.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r0.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r3.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r3.w, r13.xyzx, r17.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r16.xyz, r3.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r13.xyzx, r18.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r12.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r0.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r3.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r3.w, r12.xyzx, r16.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r15.xyz, r3.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r12.xyzx, r17.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r11.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, cb0[901].x
                  breakc_z r3.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(5)
                  mov r12.xyz, cb0[r3.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r3.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r3.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r3.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r3.w, r7.w, r17.y
                
                #line 124
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r3.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r8.w, r12.xyzx, r18.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r15.xyz, r8.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r12.xyzx, r19.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r11.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r8.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r3.w, r16.xyzx, r17.xyzx
                    div r3.w, l(1.000000), r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r3.w, r1.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.y, r1.w, cb0[1502].x
                  breakc_z r3.y
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.y, r1.w, l(6)
                  mov r13.xyz, cb0[r3.y + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.y + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.y + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.y + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.y + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.y + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r3.y + 905].w  // L<15>
                  mov r3.y, cb0[r3.y + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r19.y
                
                #line 176
                  if_z r3.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r5.w, r13.xyzx, r20.xyzx
                    add r5.w, r5.w, r5.w
                    mov r5.w, -r5.w
                    mul r16.xyz, r5.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.w, r16.xyzx, r21.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r5.w, r5.w, r12.w
                    exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r3.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r5.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r4.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r13.xyzx, r17.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.y, r3.w, r3.y
                    exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r3.w, r18.xyzx, r19.xyzx
                    div r3.w, r3.y, r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.yyyy, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r3.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.y, r1.w
                  mov r3.z, l(1.000000)
                  dp3 r3.y, r3.xzzx, icb[r3.y + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.yyyy
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r12.xxyz, r3.yyyy
                  add r9.xyz, r3.yzwy, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 410
                mul r0.xyz, r4.xyzx, v6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r5.xyzx, v6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 414
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 368 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexSkinning
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbSkinned
                // {
                //
                //   float4x4 gBoneTransforms[128];     // Offset:    0 Size:  8192
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                // cbSkinned                         cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WEIGHTS                  0   xyz         3     NONE  float   xyz 
                // BONEINDICES              0   xyzw        4     NONE    int   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { -1, 0, 0, 0},
                                              { 0, -1, 0, 0},
                                              { 0, 0, -1, 0},
                                              { 0, 0, 0, -1} }
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_constantbuffer cb1[511], dynamicIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                dcl_indexableTemp x0[4], 4
                
                #line 142 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov x0[0].x, v3.x  // weights<0>
                mov x0[1].x, v3.y  // weights<1>
                mov x0[2].x, v3.z  // weights<2>
                mov r0.x, -v3.x
                add r0.x, r0.x, l(1.000000)
                mov r0.y, -v3.y
                add r0.x, r0.y, r0.x
                mov r0.y, -v3.z
                add r0.x, r0.y, r0.x
                mov x0[3].x, r0.x  // weights<3>
                
                #line 150
                mov r0.xyz, l(0,0,0,0)  // posL<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, l(0,0,0,0)  // normalL<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, l(0)  // i<0>
                loop 
                  ilt r2.x, r1.w, l(4)
                  breakc_z r2.x
                
                #line 154
                  mov r2.x, r1.w
                  and r3.xyzw, v4.xyzw, icb[r2.x + 0].xyzw
                  or r2.yz, r3.yywy, r3.xxzx
                  or r2.y, r2.z, r2.y
                  ine r2.z, r2.y, l(-1)
                  if_nz r2.z
                    mov r2.z, x0[r2.x + 0].x  // weights<0:Inf>
                    imul null, r2.y, r2.y, l(4)
                    mov r3.xyz, v0.xyzx
                    mov r3.w, l(1.000000)
                    dp4 r4.x, r3.xyzw, cb1[r2.y + 0].xyzw
                    dp4 r4.y, r3.xyzw, cb1[r2.y + 1].xyzw
                    dp4 r4.z, r3.xyzw, cb1[r2.y + 2].xyzw
                    mul r3.xyz, r2.zzzz, r4.xyzx
                    add r0.xyz, r0.xyzx, r3.xyzx  // posL<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r3.x, v1.xyzx, cb1[r2.y + 0].xyzx
                    dp3 r3.y, v1.xyzx, cb1[r2.y + 1].xyzx
                    dp3 r3.z, v1.xyzx, cb1[r2.y + 2].xyzx
                    mul r2.yzw, r2.zzzz, r3.xxyz
                    add r1.xyz, r1.xyzx, r2.yzwy  // normalL<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 154
                  else 
                
                #line 161
                    mov r2.x, x0[r2.x + 0].x  // weights<0:Inf>
                    imul null, r2.y, v4.x, l(4)
                    mov r3.xyz, v0.xyzx
                    mov r3.w, l(1.000000)
                    dp4 r4.x, r3.xyzw, cb1[r2.y + 0].xyzw
                    dp4 r4.y, r3.xyzw, cb1[r2.y + 1].xyzw
                    dp4 r4.z, r3.xyzw, cb1[r2.y + 2].xyzw
                    mul r2.xyz, r2.xxxx, r4.xyzx
                    add r0.xyz, r0.xyzx, r2.xyzx  // posL<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 154
                  endif 
                
                #line 150
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 165
                mov r0.w, l(1.000000)
                dp4 r2.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r2.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r2.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r3.x, r1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r3.y, r1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r3.z, r1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 170
                dp4 r1.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 173
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 176
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 179
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r1.xyzw  // SkinningVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // SkinningVS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // SkinningVS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r2.xyzx  // SkinningVS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r3.xyzx  // SkinningVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // SkinningVS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 79 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r3.w, r7.xyzx, r11.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r10.xyz, r3.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r7.xyzx, r12.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r6.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r0.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r3.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r3.w, r13.xyzx, r17.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r16.xyz, r3.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r13.xyzx, r18.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r12.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r0.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r3.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r3.w, r12.xyzx, r16.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r15.xyz, r3.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r12.xyzx, r17.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r11.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, cb0[901].x
                  breakc_z r3.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(5)
                  mov r12.xyz, cb0[r3.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r3.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r3.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r3.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r3.w, r7.w, r17.y
                
                #line 124
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r3.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r8.w, r12.xyzx, r18.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r15.xyz, r8.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r12.xyzx, r19.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r11.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r8.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r3.w, r16.xyzx, r17.xyzx
                    div r3.w, l(1.000000), r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r3.w, r1.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.y, r1.w, cb0[1502].x
                  breakc_z r3.y
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.y, r1.w, l(6)
                  mov r13.xyz, cb0[r3.y + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.y + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.y + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.y + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.y + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.y + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r3.y + 905].w  // L<15>
                  mov r3.y, cb0[r3.y + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r19.y
                
                #line 176
                  if_z r3.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r5.w, r13.xyzx, r20.xyzx
                    add r5.w, r5.w, r5.w
                    mov r5.w, -r5.w
                    mul r16.xyz, r5.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.w, r16.xyzx, r21.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r5.w, r5.w, r12.w
                    exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r3.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r5.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r4.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r13.xyzx, r17.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.y, r3.w, r3.y
                    exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r3.w, r18.xyzx, r19.xyzx
                    div r3.w, r3.y, r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.yyyy, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r3.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.y, r1.w
                  mov r3.z, l(1.000000)
                  dp3 r3.y, r3.xzzx, icb[r3.y + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.yyyy
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r12.xxyz, r3.yyyy
                  add r9.xyz, r3.yzwy, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 364 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexSkinningInstancing
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // WEIGHTS                  0   xyz         3     NONE  float       
                // BONEINDICES              0   xyzw        4     NONE    int       
                // WORLD                    0   xyzw        5     NONE  float   xyz 
                // WORLD                    1   xyzw        6     NONE  float   xyz 
                // WORLD                    2   xyzw        7     NONE  float   xyz 
                // WORLD                    3   xyzw        8     NONE  float   xyz 
                // INVTRANSPOSE             0   xyzw        9     NONE  float   xyz 
                // INVTRANSPOSE             1   xyzw       10     NONE  float   xyz 
                // INVTRANSPOSE             2   xyzw       11     NONE  float   xyz 
                // INVTRANSPOSE             3   xyzw       12     NONE  float       
                // COLOR                    0   xyzw       13     NONE  float   xyzw
                // RENDERERIDX              0   x          14     NONE   uint   x   
                // SV_InstanceID            0   x          15   INSTID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint   x   
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v5.xyz
                dcl_input v6.xyz
                dcl_input v7.xyz
                dcl_input v8.xyz
                dcl_input v9.xyz
                dcl_input v10.xyz
                dcl_input v11.xyz
                dcl_input v13.xyzw
                dcl_input v14.x
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_output o7.x
                dcl_temps 8
                
                #line 208 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mul r0.xyz, v0.xxxx, v5.xyzx
                mul r1.xyz, v0.yyyy, v6.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v0.zzzz, v7.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r1.xyz, v8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r1.xyz, r0.xyzx  // vout<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                
                #line 211
                mul r2.xyz, v1.xxxx, v9.xyzx
                mul r3.xyz, v1.yyyy, v10.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r3.xyz, v1.zzzz, v11.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx  // vout<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov r3.xyzw, v13.xyzw  // vout<20,21,22,23>
                
                #line 216
                mov r0.w, l(1.000000)
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 219
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r5.x, r0.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r0.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 222
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r6.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 225
                dp4 r7.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r7.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r7.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r7.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 228
                mov r0.x, v14.x  // vout<24>
                mov o0.xyzw, r4.xyzw  // SkinningInstanceVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r6.xyzw  // SkinningInstanceVS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r7.xyzw  // SkinningInstanceVS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o6.xyzw, r3.xyzw  // SkinningInstanceVS<20,21,22,23>
                mov o1.xyz, r1.xyzx  // SkinningInstanceVS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // SkinningInstanceVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // SkinningInstanceVS<10:NaN:Inf,11:NaN:Inf>
                mov o7.x, r0.x  // SkinningInstanceVS<24>
                ret 
                // Approximately 43 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gDiffuseMapArray                  texture  float4     2darray    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float   xyz 
                // instanceID               0   x           7     NONE   uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2darray (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v6.xyz
                dcl_input_ps constant v7.x
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 324
                utof r2.z, v7.x  // uvw<2:[0f,4.29497e+009f]>
                mov r2.xy, v3.xyxx
                sample_indexable(texture2darray)(float,float,float,float) r2.xyzw, r2.xyzx, t1.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t0.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r3.w, r7.xyzx, r11.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r10.xyz, r3.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r7.xyzx, r12.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r6.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r0.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r3.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r3.w, r13.xyzx, r17.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r16.xyz, r3.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r13.xyzx, r18.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r12.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r0.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r3.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r3.w, r12.xyzx, r16.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r15.xyz, r3.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r12.xyzx, r17.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r11.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, cb0[901].x
                  breakc_z r3.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(5)
                  mov r12.xyz, cb0[r3.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r3.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r3.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r3.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r3.w, r7.w, r17.y
                
                #line 124
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r3.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r8.w, r12.xyzx, r18.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r15.xyz, r8.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r12.xyzx, r19.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r11.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r8.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r3.w, r16.xyzx, r17.xyzx
                    div r3.w, l(1.000000), r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r3.w, r1.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.y, r1.w, cb0[1502].x
                  breakc_z r3.y
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.y, r1.w, l(6)
                  mov r13.xyz, cb0[r3.y + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.y + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.y + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.y + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.y + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.y + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r3.y + 905].w  // L<15>
                  mov r3.y, cb0[r3.y + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r19.y
                
                #line 176
                  if_z r3.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r5.w, r13.xyzx, r20.xyzx
                    add r5.w, r5.w, r5.w
                    mov r5.w, -r5.w
                    mul r16.xyz, r5.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.w, r16.xyzx, r21.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r5.w, r5.w, r12.w
                    exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r3.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r5.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r4.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r13.xyzx, r17.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.y, r3.w, r3.y
                    exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r3.w, r18.xyzx, r19.xyzx
                    div r3.w, r3.y, r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.yyyy, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r3.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.y, r1.w
                  mov r3.z, l(1.000000)
                  dp3 r3.y, r3.xzzx, icb[r3.y + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.yyyy
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r12.xxyz, r3.yyyy
                  add r9.xyz, r3.yzwy, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 410
                mul r0.xyz, r4.xyzx, v6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r5.xyzx, v6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 414
                add r0.xyz, r0.xyzx, r1.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 368 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[30], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 329 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r1.x, r0.w, l(-0.100000)
                lt r1.x, r1.x, l(0.000000)
                and r1.x, r1.x, l(-1)
                discard r1.x
                
                #line 346
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 439
                mul r0.w, r0.w, cb0[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 10 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r3.w, r7.xyzx, r11.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r10.xyz, r3.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r7.xyzx, r12.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r6.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r0.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r3.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r3.w, r13.xyzx, r17.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r16.xyz, r3.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r13.xyzx, r18.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r12.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r0.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r3.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r3.w, r12.xyzx, r16.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r15.xyz, r3.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r12.xyzx, r17.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r11.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, cb0[901].x
                  breakc_z r3.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(5)
                  mov r12.xyz, cb0[r3.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r3.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r3.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r3.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r3.w, r7.w, r17.y
                
                #line 124
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r3.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r8.w, r12.xyzx, r18.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r15.xyz, r8.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r12.xyzx, r19.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r11.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r8.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r3.w, r16.xyzx, r17.xyzx
                    div r3.w, l(1.000000), r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r3.w, r1.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.y, r1.w, cb0[1502].x
                  breakc_z r3.y
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.y, r1.w, l(6)
                  mov r13.xyz, cb0[r3.y + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.y + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.y + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.y + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.y + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.y + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r3.y + 905].w  // L<15>
                  mov r3.y, cb0[r3.y + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r19.y
                
                #line 176
                  if_z r3.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r5.w, r13.xyzx, r20.xyzx
                    add r5.w, r5.w, r5.w
                    mov r5.w, -r5.w
                    mul r16.xyz, r5.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.w, r16.xyzx, r21.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r5.w, r5.w, r12.w
                    exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r3.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r5.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r4.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r13.xyzx, r17.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.y, r3.w, r3.y
                    exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r3.w, r18.xyzx, r19.xyzx
                    div r3.w, r3.y, r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.yyyy, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r3.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.y, r1.w
                  mov r3.z, l(1.000000)
                  dp3 r3.y, r3.xzzx, icb[r3.y + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.yyyy
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r12.xxyz, r3.yyyy
                  add r9.xyz, r3.yzwy, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 368 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r3.w, r7.xyzx, r11.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r10.xyz, r3.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r7.xyzx, r12.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r6.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r0.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r3.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r3.w, r13.xyzx, r17.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r16.xyz, r3.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r13.xyzx, r18.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r12.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r0.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r3.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r3.w, r12.xyzx, r16.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r15.xyz, r3.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r12.xyzx, r17.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r11.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, cb0[901].x
                  breakc_z r3.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(5)
                  mov r12.xyz, cb0[r3.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r3.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r3.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r3.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r3.w, r7.w, r17.y
                
                #line 124
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r3.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r8.w, r12.xyzx, r18.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r15.xyz, r8.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r12.xyzx, r19.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r11.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r8.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r3.w, r16.xyzx, r17.xyzx
                    div r3.w, l(1.000000), r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r3.w, r1.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.y, r1.w, cb0[1502].x
                  breakc_z r3.y
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.y, r1.w, l(6)
                  mov r13.xyz, cb0[r3.y + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.y + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.y + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.y + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.y + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.y + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r3.y + 905].w  // L<15>
                  mov r3.y, cb0[r3.y + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r19.y
                
                #line 176
                  if_z r3.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r5.w, r13.xyzx, r20.xyzx
                    add r5.w, r5.w, r5.w
                    mov r5.w, -r5.w
                    mul r16.xyz, r5.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.w, r16.xyzx, r21.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r5.w, r5.w, r12.w
                    exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r3.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r5.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r4.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r13.xyzx, r17.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.y, r3.w, r3.y
                    exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r3.w, r18.xyzx, r19.xyzx
                    div r3.w, r3.y, r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.yyyy, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r3.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.y, r1.w
                  mov r3.z, l(1.000000)
                  dp3 r3.y, r3.xzzx, icb[r3.y + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.yyyy
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r12.xxyz, r3.yyyy
                  add r9.xyz, r3.yzwy, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 368 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r3.w, r7.xyzx, r11.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r10.xyz, r3.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r7.xyzx, r12.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r6.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r0.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r3.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r3.w, r13.xyzx, r17.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r16.xyz, r3.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r13.xyzx, r18.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r12.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r0.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r3.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r3.w, r12.xyzx, r16.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r15.xyz, r3.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r12.xyzx, r17.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r11.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, cb0[901].x
                  breakc_z r3.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(5)
                  mov r12.xyz, cb0[r3.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r3.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r3.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r3.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r3.w, r7.w, r17.y
                
                #line 124
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r3.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r8.w, r12.xyzx, r18.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r15.xyz, r8.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r12.xyzx, r19.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r11.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r8.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r3.w, r16.xyzx, r17.xyzx
                    div r3.w, l(1.000000), r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r3.w, r1.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.y, r1.w, cb0[1502].x
                  breakc_z r3.y
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.y, r1.w, l(6)
                  mov r13.xyz, cb0[r3.y + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.y + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.y + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.y + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.y + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.y + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r3.y + 905].w  // L<15>
                  mov r3.y, cb0[r3.y + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r19.y
                
                #line 176
                  if_z r3.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r5.w, r13.xyzx, r20.xyzx
                    add r5.w, r5.w, r5.w
                    mov r5.w, -r5.w
                    mul r16.xyz, r5.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.w, r16.xyzx, r21.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r5.w, r5.w, r12.w
                    exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r3.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r5.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r4.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r13.xyzx, r17.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.y, r3.w, r3.y
                    exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r3.w, r18.xyzx, r19.xyzx
                    div r3.w, r3.y, r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.yyyy, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r3.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.y, r1.w
                  mov r3.z, l(1.000000)
                  dp3 r3.y, r3.xzzx, icb[r3.y + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.yyyy
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r12.xxyz, r3.yyyy
                  add r9.xyz, r3.yzwy, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 368 instruction slots used
                            
            };
        }

    }

    technique11 Light1Fog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samShadow                       sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                  add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r2.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r2.x, r2.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r2.x, r2.x  // shadow<0:[0f,1f]>
                else 
                  mov r2.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r3.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r3.w, r6.xyzx, r10.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r9.xyz, r3.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r6.xyzx, r11.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r5.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r1.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r2.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:Inf>
                mov r6.y, r3.y  // ambient<1:Inf>
                mov r6.z, r3.z  // ambient<2:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r5.w, r12.xyzx, r16.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r15.xyz, r5.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r12.xyzx, r17.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r11.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r5.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r5.w, r11.xyzx, r15.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r14.xyz, r5.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r11.xyzx, r16.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r10.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r1.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r5.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r2.w, r1.w  // i<0>
                loop 
                  ilt r6.w, r2.w, cb0[901].x
                  breakc_z r6.w
                
                #line 384
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r6.w, r2.w, l(5)
                  mov r11.xyz, cb0[r6.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r6.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r6.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r6.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r6.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r6.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r6.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r6.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r6.w, r7.w, r16.y
                
                #line 124
                  if_z r6.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r6.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r6.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r8.w, r11.xyzx, r17.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r14.xyz, r8.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r11.xyzx, r18.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r10.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r6.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r9.xyz, r7.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r6.w, r15.xyzx, r16.xyzx
                    div r6.w, l(1.000000), r6.w  // att<0:NaN:Inf>
                    mul r9.xyz, r6.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r6.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r6.w, r2.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r6.w + 0].xyzx
                  mul r9.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r2.w, r2.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r1.w  // i<0>
                loop 
                  ilt r2.w, r2.y, cb0[1502].x
                  breakc_z r2.w
                
                #line 397
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r2.y, l(6)
                  mov r12.xyz, cb0[r2.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.w + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r2.w + 905].w  // L<15>
                  mov r2.w, cb0[r2.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r18.y
                
                #line 176
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r5.x, r12.xyzx, r19.xyzx
                    add r5.x, r5.x, r5.x
                    mov r5.x, -r5.x
                    mul r15.xyz, r5.xxxx, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.x, r15.xyzx, r20.xyzx
                    max r5.x, r5.x, l(0.000000)
                    log r5.x, r5.x
                    mul r5.x, r5.x, r11.w
                    exp r5.x, r5.x  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.xxxx
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r10.xyz, r4.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r12.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r2.w, r2.w, r3.w
                    exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r3.w, r17.xyzx, r18.xyzx
                    div r3.w, r2.w, r3.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r2.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r2.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r3.xyzx, r4.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r8.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, cb1[29].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 372 instruction slots used
                            
            };
        }

    }

    technique11 Light2Fog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samShadow                       sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                  add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r2.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r2.x, r2.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r2.x, r2.x  // shadow<0:[0f,1f]>
                else 
                  mov r2.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r3.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r3.w, r6.xyzx, r10.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r9.xyz, r3.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r6.xyzx, r11.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r5.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r1.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r2.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:Inf>
                mov r6.y, r3.y  // ambient<1:Inf>
                mov r6.z, r3.z  // ambient<2:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r5.w, r12.xyzx, r16.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r15.xyz, r5.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r12.xyzx, r17.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r11.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r5.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r5.w, r11.xyzx, r15.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r14.xyz, r5.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r11.xyzx, r16.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r10.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r1.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r5.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r2.w, r1.w  // i<0>
                loop 
                  ilt r6.w, r2.w, cb0[901].x
                  breakc_z r6.w
                
                #line 384
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r6.w, r2.w, l(5)
                  mov r11.xyz, cb0[r6.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r6.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r6.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r6.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r6.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r6.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r6.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r6.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r6.w, r7.w, r16.y
                
                #line 124
                  if_z r6.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r6.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r6.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r8.w, r11.xyzx, r17.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r14.xyz, r8.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r11.xyzx, r18.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r10.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r6.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r9.xyz, r7.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r6.w, r15.xyzx, r16.xyzx
                    div r6.w, l(1.000000), r6.w  // att<0:NaN:Inf>
                    mul r9.xyz, r6.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r6.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r6.w, r2.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r6.w + 0].xyzx
                  mul r9.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r2.w, r2.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r1.w  // i<0>
                loop 
                  ilt r2.w, r2.y, cb0[1502].x
                  breakc_z r2.w
                
                #line 397
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r2.y, l(6)
                  mov r12.xyz, cb0[r2.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.w + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r2.w + 905].w  // L<15>
                  mov r2.w, cb0[r2.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r18.y
                
                #line 176
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r5.x, r12.xyzx, r19.xyzx
                    add r5.x, r5.x, r5.x
                    mov r5.x, -r5.x
                    mul r15.xyz, r5.xxxx, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.x, r15.xyzx, r20.xyzx
                    max r5.x, r5.x, l(0.000000)
                    log r5.x, r5.x
                    mul r5.x, r5.x, r11.w
                    exp r5.x, r5.x  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.xxxx
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r10.xyz, r4.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r12.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r2.w, r2.w, r3.w
                    exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r3.w, r17.xyzx, r18.xyzx
                    div r3.w, r2.w, r3.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r2.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r2.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r3.xyzx, r4.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r8.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, cb1[29].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 372 instruction slots used
                            
            };
        }

    }

    technique11 Light3Fog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samShadow                       sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                  add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s0, r2.x
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r2.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r2.x, r2.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r2.x, r2.x  // shadow<0:[0f,1f]>
                else 
                  mov r2.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r3.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r3.w, r6.xyzx, r10.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r9.xyz, r3.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r6.xyzx, r11.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r5.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r1.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r2.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:Inf>
                mov r6.y, r3.y  // ambient<1:Inf>
                mov r6.z, r3.z  // ambient<2:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r5.w, r12.xyzx, r16.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r15.xyz, r5.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r12.xyzx, r17.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r11.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r5.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r5.w, r11.xyzx, r15.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r14.xyz, r5.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r11.xyzx, r16.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r10.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r1.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r5.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r2.w, r1.w  // i<0>
                loop 
                  ilt r6.w, r2.w, cb0[901].x
                  breakc_z r6.w
                
                #line 384
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r6.w, r2.w, l(5)
                  mov r11.xyz, cb0[r6.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r6.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r6.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r6.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r6.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r6.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r6.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r6.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r6.w, r7.w, r16.y
                
                #line 124
                  if_z r6.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r6.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r6.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r8.w, r11.xyzx, r17.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r14.xyz, r8.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r11.xyzx, r18.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r10.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r6.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r9.xyz, r7.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r6.w, r15.xyzx, r16.xyzx
                    div r6.w, l(1.000000), r6.w  // att<0:NaN:Inf>
                    mul r9.xyz, r6.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r6.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r6.w, r2.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r6.w + 0].xyzx
                  mul r9.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r2.w, r2.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r1.w  // i<0>
                loop 
                  ilt r2.w, r2.y, cb0[1502].x
                  breakc_z r2.w
                
                #line 397
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r2.y, l(6)
                  mov r12.xyz, cb0[r2.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.w + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r2.w + 905].w  // L<15>
                  mov r2.w, cb0[r2.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r18.y
                
                #line 176
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r5.x, r12.xyzx, r19.xyzx
                    add r5.x, r5.x, r5.x
                    mov r5.x, -r5.x
                    mul r15.xyz, r5.xxxx, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.x, r15.xyzx, r20.xyzx
                    max r5.x, r5.x, l(0.000000)
                    log r5.x, r5.x
                    mul r5.x, r5.x, r11.w
                    exp r5.x, r5.x  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.xxxx
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r10.xyz, r4.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r12.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r2.w, r2.w, r3.w
                    exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r3.w, r17.xyzx, r18.xyzx
                    div r3.w, r2.w, r3.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r2.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r2.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r3.xyzx, r4.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r8.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, cb1[29].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 372 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400 [unused]
                //   int dirLight_size;                 // Offset: 6400 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000 [unused]
                //   int pointLight_size;               // Offset: 14416 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600 [unused]
                //   int spotLight_size;                // Offset: 24032 Size:     4 [unused]
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[1505], immediateIndexed
                dcl_constantbuffer cb1[30], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 307 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, -v1.xyzx
                add r0.xyz, r0.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 346
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 432
                mov r0.y, -cb0[1503].x
                add r0.x, r0.y, r0.x
                div r0.x, r0.x, cb0[1503].y
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[1504].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r1.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 19 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r7.w, r8.w, r17.y
                
                #line 124
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r4.w, r4.w, r19.y
                
                #line 176
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 373 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r7.w, r8.w, r17.y
                
                #line 124
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r4.w, r4.w, r19.y
                
                #line 176
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 373 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r7.w, r8.w, r17.y
                
                #line 124
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r4.w, r4.w, r19.y
                
                #line 176
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 373 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400 [unused]
                //   int dirLight_size;                 // Offset: 6400 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000 [unused]
                //   int pointLight_size;               // Offset: 14416 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600 [unused]
                //   int spotLight_size;                // Offset: 24032 Size:     4 [unused]
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[1505], immediateIndexed
                dcl_constantbuffer cb1[30], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 307 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, -v1.xyzx
                add r0.xyz, r0.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r0.y, r1.w, l(-0.100000)
                lt r0.y, r0.y, l(0.000000)
                and r0.y, r0.y, l(-1)
                discard r0.y
                
                #line 346
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 432
                mov r0.y, -cb0[1503].x
                add r0.x, r0.y, r0.x
                div r0.x, r0.x, cb0[1503].y
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[1504].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r1.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 23 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r7.w, r8.w, r17.y
                
                #line 124
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r4.w, r4.w, r19.y
                
                #line 176
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 377 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r7.w, r8.w, r17.y
                
                #line 124
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r4.w, r4.w, r19.y
                
                #line 176
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 377 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r7.w, r8.w, r17.y
                
                #line 124
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r4.w, r4.w, r19.y
                
                #line 176
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 377 instruction slots used
                            
            };
        }

    }

    technique11 Light1Reflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r2.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r2.x, r2.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r2.x, r2.x  // shadow<0:[0f,1f]>
                else 
                  mov r2.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r3.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r2.w, r6.xyzx, r10.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r9.xyz, r2.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r6.xyzx, r11.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r5.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r0.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r2.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:Inf>
                mov r6.y, r3.y  // ambient<1:Inf>
                mov r6.z, r3.z  // ambient<2:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r2.w, r12.xyzx, r16.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r15.xyz, r2.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r12.xyzx, r17.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r11.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r2.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r2.w, r11.xyzx, r15.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r14.xyz, r2.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r11.xyzx, r16.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r10.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r0.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r2.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r9.xyz, r1.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r2.w, r1.w, cb0[901].x
                  breakc_z r2.w
                
                #line 384
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r1.w, l(5)
                  mov r11.xyz, cb0[r2.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r2.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r2.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r2.w + 404].xyzx  // L<12,13,14>
                  mov r6.w, cb0[r2.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r2.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r2.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r2.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r2.w, r6.w, r16.y
                
                #line 124
                  if_z r2.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r2.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r6.w, l(0.000000), r2.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r7.w, r11.xyzx, r17.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r14.xyz, r7.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r11.xyzx, r18.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r10.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r2.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r9.xyz, r6.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r2.w, r15.xyzx, r16.xyzx
                    div r2.w, l(1.000000), r2.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r2.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r2.w, r1.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r2.w + 0].xyzx
                  mul r9.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r2.y, r1.w, cb0[1502].x
                  breakc_z r2.y
                
                #line 397
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.y, r1.w, l(6)
                  mov r12.xyz, cb0[r2.y + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.y + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.y + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.y + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.y + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.y + 907].xyzx  // L<20,21,22>
                  mov r2.w, cb0[r2.y + 905].w  // L<15>
                  mov r2.y, cb0[r2.y + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r3.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r2.w, r2.w, r18.y
                
                #line 176
                  if_z r2.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r2.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r3.w, l(0.000000), r2.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r4.w, r12.xyzx, r19.xyzx
                    add r4.w, r4.w, r4.w
                    mov r4.w, -r4.w
                    mul r15.xyz, r4.wwww, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r4.w, r15.xyzx, r20.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r4.w, r4.w, r11.w
                    exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r2.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r2.w, r12.xyzx, r16.xyzx
                    max r2.w, r2.w, l(0.000000)
                    log r2.w, r2.w
                    mul r2.y, r2.w, r2.y
                    exp r2.y, r2.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r2.w, r17.xyzx, r18.xyzx
                    div r2.w, r2.y, r2.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.yyyy, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r2.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r2.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r2.y, r1.w
                  mov r2.z, l(1.000000)
                  dp3 r2.y, r2.xzzx, icb[r2.y + 0].xyzx
                  mul r10.xyz, r10.xyzx, r2.yyyy
                  add r4.xyz, r4.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r2.yzw, r11.xxyz, r2.yyyy
                  add r8.xyz, r2.yzwy, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r2.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r8.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, cb1[29].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 373 instruction slots used
                            
            };
        }

    }

    technique11 Light2Reflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r2.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r2.x, r2.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r2.x, r2.x  // shadow<0:[0f,1f]>
                else 
                  mov r2.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r3.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r2.w, r6.xyzx, r10.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r9.xyz, r2.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r6.xyzx, r11.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r5.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r0.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r2.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:Inf>
                mov r6.y, r3.y  // ambient<1:Inf>
                mov r6.z, r3.z  // ambient<2:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r2.w, r12.xyzx, r16.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r15.xyz, r2.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r12.xyzx, r17.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r11.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r2.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r2.w, r11.xyzx, r15.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r14.xyz, r2.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r11.xyzx, r16.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r10.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r0.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r2.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r9.xyz, r1.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r2.w, r1.w, cb0[901].x
                  breakc_z r2.w
                
                #line 384
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r1.w, l(5)
                  mov r11.xyz, cb0[r2.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r2.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r2.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r2.w + 404].xyzx  // L<12,13,14>
                  mov r6.w, cb0[r2.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r2.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r2.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r2.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r2.w, r6.w, r16.y
                
                #line 124
                  if_z r2.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r2.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r6.w, l(0.000000), r2.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r7.w, r11.xyzx, r17.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r14.xyz, r7.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r11.xyzx, r18.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r10.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r2.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r9.xyz, r6.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r2.w, r15.xyzx, r16.xyzx
                    div r2.w, l(1.000000), r2.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r2.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r2.w, r1.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r2.w + 0].xyzx
                  mul r9.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r2.y, r1.w, cb0[1502].x
                  breakc_z r2.y
                
                #line 397
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.y, r1.w, l(6)
                  mov r12.xyz, cb0[r2.y + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.y + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.y + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.y + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.y + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.y + 907].xyzx  // L<20,21,22>
                  mov r2.w, cb0[r2.y + 905].w  // L<15>
                  mov r2.y, cb0[r2.y + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r3.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r2.w, r2.w, r18.y
                
                #line 176
                  if_z r2.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r2.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r3.w, l(0.000000), r2.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r4.w, r12.xyzx, r19.xyzx
                    add r4.w, r4.w, r4.w
                    mov r4.w, -r4.w
                    mul r15.xyz, r4.wwww, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r4.w, r15.xyzx, r20.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r4.w, r4.w, r11.w
                    exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r2.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r2.w, r12.xyzx, r16.xyzx
                    max r2.w, r2.w, l(0.000000)
                    log r2.w, r2.w
                    mul r2.y, r2.w, r2.y
                    exp r2.y, r2.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r2.w, r17.xyzx, r18.xyzx
                    div r2.w, r2.y, r2.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.yyyy, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r2.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r2.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r2.y, r1.w
                  mov r2.z, l(1.000000)
                  dp3 r2.y, r2.xzzx, icb[r2.y + 0].xyzx
                  mul r10.xyz, r10.xyzx, r2.yyyy
                  add r4.xyz, r4.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r2.yzw, r11.xxyz, r2.yyyy
                  add r8.xyz, r2.yzwy, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r2.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r8.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, cb1[29].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 373 instruction slots used
                            
            };
        }

    }

    technique11 Light3Reflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s1, r2.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r2.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r2.x, r2.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r2.x, r2.x  // shadow<0:[0f,1f]>
                else 
                  mov r2.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r3.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r2.w, r6.xyzx, r10.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r9.xyz, r2.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r6.xyzx, r11.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r5.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r0.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r2.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:Inf>
                mov r6.y, r3.y  // ambient<1:Inf>
                mov r6.z, r3.z  // ambient<2:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r2.w, r12.xyzx, r16.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r15.xyz, r2.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r12.xyzx, r17.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r11.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r2.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r2.w, r11.xyzx, r15.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r14.xyz, r2.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r11.xyzx, r16.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r10.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r0.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r2.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r9.xyz, r1.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r2.w, r1.w, cb0[901].x
                  breakc_z r2.w
                
                #line 384
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r1.w, l(5)
                  mov r11.xyz, cb0[r2.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r2.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r2.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r2.w + 404].xyzx  // L<12,13,14>
                  mov r6.w, cb0[r2.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r2.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r2.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r2.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r2.w, r6.w, r16.y
                
                #line 124
                  if_z r2.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r2.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r6.w, l(0.000000), r2.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r7.w, r11.xyzx, r17.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r14.xyz, r7.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r11.xyzx, r18.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r10.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r2.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r9.xyz, r6.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r2.w, r15.xyzx, r16.xyzx
                    div r2.w, l(1.000000), r2.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r2.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r2.w, r1.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r2.w + 0].xyzx
                  mul r9.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r2.y, r1.w, cb0[1502].x
                  breakc_z r2.y
                
                #line 397
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.y, r1.w, l(6)
                  mov r12.xyz, cb0[r2.y + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.y + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.y + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.y + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.y + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.y + 907].xyzx  // L<20,21,22>
                  mov r2.w, cb0[r2.y + 905].w  // L<15>
                  mov r2.y, cb0[r2.y + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r3.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r2.w, r2.w, r18.y
                
                #line 176
                  if_z r2.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r2.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r3.w, l(0.000000), r2.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r4.w, r12.xyzx, r19.xyzx
                    add r4.w, r4.w, r4.w
                    mov r4.w, -r4.w
                    mul r15.xyz, r4.wwww, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r4.w, r15.xyzx, r20.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r4.w, r4.w, r11.w
                    exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r2.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r2.w, r12.xyzx, r16.xyzx
                    max r2.w, r2.w, l(0.000000)
                    log r2.w, r2.w
                    mul r2.y, r2.w, r2.y
                    exp r2.y, r2.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r2.w, r17.xyzx, r18.xyzx
                    div r2.w, r2.y, r2.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.yyyy, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r2.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r2.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r2.y, r1.w
                  mov r2.z, l(1.000000)
                  dp3 r2.y, r2.xzzx, icb[r2.y + 0].xyzx
                  mul r10.xyz, r10.xyzx, r2.yyyy
                  add r4.xyz, r4.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r2.yzw, r11.xxyz, r2.yyyy
                  add r8.xyz, r2.yzwy, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r2.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r8.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, cb1[29].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 373 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[30], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 329 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 346
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 439
                mul r0.w, r0.w, cb0[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 6 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r3.w, r7.xyzx, r11.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r10.xyz, r3.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r7.xyzx, r12.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r6.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r0.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r3.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r3.w, r13.xyzx, r17.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r16.xyz, r3.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r13.xyzx, r18.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r12.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r0.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r3.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r3.w, r12.xyzx, r16.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r15.xyz, r3.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r12.xyzx, r17.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r11.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, cb0[901].x
                  breakc_z r3.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(5)
                  mov r12.xyz, cb0[r3.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r3.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r3.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r3.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r3.w, r7.w, r17.y
                
                #line 124
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r3.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r8.w, r12.xyzx, r18.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r15.xyz, r8.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r12.xyzx, r19.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r11.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r8.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r3.w, r16.xyzx, r17.xyzx
                    div r3.w, l(1.000000), r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r3.w, r1.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.y, r1.w, cb0[1502].x
                  breakc_z r3.y
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.y, r1.w, l(6)
                  mov r13.xyz, cb0[r3.y + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.y + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.y + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.y + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.y + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.y + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r3.y + 905].w  // L<15>
                  mov r3.y, cb0[r3.y + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r19.y
                
                #line 176
                  if_z r3.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r5.w, r13.xyzx, r20.xyzx
                    add r5.w, r5.w, r5.w
                    mov r5.w, -r5.w
                    mul r16.xyz, r5.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.w, r16.xyzx, r21.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r5.w, r5.w, r12.w
                    exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r3.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r5.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r4.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r13.xyzx, r17.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.y, r3.w, r3.y
                    exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r3.w, r18.xyzx, r19.xyzx
                    div r3.w, r3.y, r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.yyyy, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r3.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.y, r1.w
                  mov r3.z, l(1.000000)
                  dp3 r3.y, r3.xzzx, icb[r3.y + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.yyyy
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r12.xxyz, r3.yyyy
                  add r9.xyz, r3.yzwy, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 374 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r3.w, r7.xyzx, r11.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r10.xyz, r3.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r7.xyzx, r12.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r6.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r0.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r3.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r3.w, r13.xyzx, r17.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r16.xyz, r3.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r13.xyzx, r18.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r12.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r0.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r3.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r3.w, r12.xyzx, r16.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r15.xyz, r3.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r12.xyzx, r17.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r11.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, cb0[901].x
                  breakc_z r3.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(5)
                  mov r12.xyz, cb0[r3.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r3.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r3.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r3.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r3.w, r7.w, r17.y
                
                #line 124
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r3.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r8.w, r12.xyzx, r18.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r15.xyz, r8.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r12.xyzx, r19.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r11.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r8.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r3.w, r16.xyzx, r17.xyzx
                    div r3.w, l(1.000000), r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r3.w, r1.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.y, r1.w, cb0[1502].x
                  breakc_z r3.y
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.y, r1.w, l(6)
                  mov r13.xyz, cb0[r3.y + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.y + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.y + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.y + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.y + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.y + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r3.y + 905].w  // L<15>
                  mov r3.y, cb0[r3.y + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r19.y
                
                #line 176
                  if_z r3.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r5.w, r13.xyzx, r20.xyzx
                    add r5.w, r5.w, r5.w
                    mov r5.w, -r5.w
                    mul r16.xyz, r5.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.w, r16.xyzx, r21.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r5.w, r5.w, r12.w
                    exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r3.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r5.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r4.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r13.xyzx, r17.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.y, r3.w, r3.y
                    exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r3.w, r18.xyzx, r19.xyzx
                    div r3.w, r3.y, r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.yyyy, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r3.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.y, r1.w
                  mov r3.z, l(1.000000)
                  dp3 r3.y, r3.xzzx, icb[r3.y + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.yyyy
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r12.xxyz, r3.yyyy
                  add r9.xyz, r3.yzwy, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 374 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r3.w, r7.xyzx, r11.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r10.xyz, r3.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r7.xyzx, r12.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r6.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r0.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r3.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r3.w, r13.xyzx, r17.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r16.xyz, r3.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r13.xyzx, r18.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r12.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r0.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r3.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r3.w, r12.xyzx, r16.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r15.xyz, r3.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r12.xyzx, r17.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r11.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, cb0[901].x
                  breakc_z r3.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(5)
                  mov r12.xyz, cb0[r3.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r3.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r3.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r3.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r3.w, r7.w, r17.y
                
                #line 124
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r3.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r8.w, r12.xyzx, r18.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r15.xyz, r8.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r12.xyzx, r19.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r11.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r8.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r3.w, r16.xyzx, r17.xyzx
                    div r3.w, l(1.000000), r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r3.w, r1.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.y, r1.w, cb0[1502].x
                  breakc_z r3.y
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.y, r1.w, l(6)
                  mov r13.xyz, cb0[r3.y + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.y + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.y + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.y + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.y + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.y + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r3.y + 905].w  // L<15>
                  mov r3.y, cb0[r3.y + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r19.y
                
                #line 176
                  if_z r3.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r5.w, r13.xyzx, r20.xyzx
                    add r5.w, r5.w, r5.w
                    mov r5.w, -r5.w
                    mul r16.xyz, r5.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.w, r16.xyzx, r21.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r5.w, r5.w, r12.w
                    exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r3.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r5.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r4.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r13.xyzx, r17.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.y, r3.w, r3.y
                    exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r3.w, r18.xyzx, r19.xyzx
                    div r3.w, r3.y, r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.yyyy, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r3.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.y, r1.w
                  mov r3.z, l(1.000000)
                  dp3 r3.y, r3.xzzx, icb[r3.y + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.yyyy
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r12.xxyz, r3.yyyy
                  add r9.xyz, r3.yzwy, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 374 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[30], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 329 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r1.x, r0.w, l(-0.100000)
                lt r1.x, r1.x, l(0.000000)
                and r1.x, r1.x, l(-1)
                discard r1.x
                
                #line 346
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 439
                mul r0.w, r0.w, cb0[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 10 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r3.w, r7.xyzx, r11.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r10.xyz, r3.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r7.xyzx, r12.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r6.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r0.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r3.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r3.w, r13.xyzx, r17.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r16.xyz, r3.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r13.xyzx, r18.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r12.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r0.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r3.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r3.w, r12.xyzx, r16.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r15.xyz, r3.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r12.xyzx, r17.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r11.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, cb0[901].x
                  breakc_z r3.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(5)
                  mov r12.xyz, cb0[r3.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r3.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r3.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r3.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r3.w, r7.w, r17.y
                
                #line 124
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r3.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r8.w, r12.xyzx, r18.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r15.xyz, r8.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r12.xyzx, r19.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r11.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r8.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r3.w, r16.xyzx, r17.xyzx
                    div r3.w, l(1.000000), r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r3.w, r1.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.y, r1.w, cb0[1502].x
                  breakc_z r3.y
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.y, r1.w, l(6)
                  mov r13.xyz, cb0[r3.y + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.y + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.y + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.y + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.y + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.y + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r3.y + 905].w  // L<15>
                  mov r3.y, cb0[r3.y + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r19.y
                
                #line 176
                  if_z r3.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r5.w, r13.xyzx, r20.xyzx
                    add r5.w, r5.w, r5.w
                    mov r5.w, -r5.w
                    mul r16.xyz, r5.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.w, r16.xyzx, r21.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r5.w, r5.w, r12.w
                    exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r3.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r5.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r4.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r13.xyzx, r17.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.y, r3.w, r3.y
                    exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r3.w, r18.xyzx, r19.xyzx
                    div r3.w, r3.y, r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.yyyy, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r3.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.y, r1.w
                  mov r3.z, l(1.000000)
                  dp3 r3.y, r3.xzzx, icb[r3.y + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.yyyy
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r12.xxyz, r3.yyyy
                  add r9.xyz, r3.yzwy, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 378 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r3.w, r7.xyzx, r11.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r10.xyz, r3.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r7.xyzx, r12.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r6.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r0.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r3.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r3.w, r13.xyzx, r17.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r16.xyz, r3.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r13.xyzx, r18.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r12.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r0.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r3.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r3.w, r12.xyzx, r16.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r15.xyz, r3.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r12.xyzx, r17.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r11.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, cb0[901].x
                  breakc_z r3.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(5)
                  mov r12.xyz, cb0[r3.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r3.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r3.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r3.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r3.w, r7.w, r17.y
                
                #line 124
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r3.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r8.w, r12.xyzx, r18.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r15.xyz, r8.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r12.xyzx, r19.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r11.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r8.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r3.w, r16.xyzx, r17.xyzx
                    div r3.w, l(1.000000), r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r3.w, r1.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.y, r1.w, cb0[1502].x
                  breakc_z r3.y
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.y, r1.w, l(6)
                  mov r13.xyz, cb0[r3.y + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.y + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.y + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.y + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.y + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.y + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r3.y + 905].w  // L<15>
                  mov r3.y, cb0[r3.y + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r19.y
                
                #line 176
                  if_z r3.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r5.w, r13.xyzx, r20.xyzx
                    add r5.w, r5.w, r5.w
                    mov r5.w, -r5.w
                    mul r16.xyz, r5.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.w, r16.xyzx, r21.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r5.w, r5.w, r12.w
                    exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r3.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r5.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r4.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r13.xyzx, r17.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.y, r3.w, r3.y
                    exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r3.w, r18.xyzx, r19.xyzx
                    div r3.w, r3.y, r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.yyyy, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r3.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.y, r1.w
                  mov r3.z, l(1.000000)
                  dp3 r3.y, r3.xzzx, icb[r3.y + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.yyyy
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r12.xxyz, r3.yyyy
                  add r9.xyz, r3.yzwy, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 378 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 356
                ine r0.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r0.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                  add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r0.w, l(0), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r3.w, r7.xyzx, r11.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r10.xyz, r3.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r7.xyzx, r12.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r6.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r0.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r3.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(1), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r3.w, r13.xyzx, r17.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r16.xyz, r3.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r13.xyzx, r18.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r12.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r0.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r3.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r1.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r0.w, l(2), cb0[400].x
                if_nz r0.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r0.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r3.w, r12.xyzx, r16.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r15.xyz, r3.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r12.xyzx, r17.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r11.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r0.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r0.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.w, r1.w, cb0[901].x
                  breakc_z r3.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r1.w, l(5)
                  mov r12.xyz, cb0[r3.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r3.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r3.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r3.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r3.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r3.w, r7.w, r17.y
                
                #line 124
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r3.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r8.w, r12.xyzx, r18.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r15.xyz, r8.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r12.xyzx, r19.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r11.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r8.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r3.w, r16.xyzx, r17.xyzx
                    div r3.w, l(1.000000), r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r3.w, r1.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.w, r0.w  // i<0>
                loop 
                  ilt r3.y, r1.w, cb0[1502].x
                  breakc_z r3.y
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.y, r1.w, l(6)
                  mov r13.xyz, cb0[r3.y + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.y + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.y + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.y + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.y + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.y + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r3.y + 905].w  // L<15>
                  mov r3.y, cb0[r3.y + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r19.y
                
                #line 176
                  if_z r3.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r5.w, r13.xyzx, r20.xyzx
                    add r5.w, r5.w, r5.w
                    mov r5.w, -r5.w
                    mul r16.xyz, r5.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.w, r16.xyzx, r21.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r5.w, r5.w, r12.w
                    exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r3.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r5.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r4.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r13.xyzx, r17.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r3.y, r3.w, r3.y
                    exp r3.y, r3.y  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r3.w, r18.xyzx, r19.xyzx
                    div r3.w, r3.y, r3.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.yyyy, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r3.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.y, r1.w
                  mov r3.z, l(1.000000)
                  dp3 r3.y, r3.xzzx, icb[r3.y + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.yyyy
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r3.yzw, r12.xxyz, r3.yyyy
                  add r9.xyz, r3.yzwy, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r1.w, r1.w, l(1)  // i<0>
                endloop 
                
                #line 414
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 378 instruction slots used
                            
            };
        }

    }

    technique11 Light1FogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                  add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r2.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r2.x, r2.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r2.x, r2.x  // shadow<0:[0f,1f]>
                else 
                  mov r2.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r3.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r3.w, r6.xyzx, r10.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r9.xyz, r3.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r6.xyzx, r11.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r5.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r1.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r2.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:Inf>
                mov r6.y, r3.y  // ambient<1:Inf>
                mov r6.z, r3.z  // ambient<2:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r5.w, r12.xyzx, r16.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r15.xyz, r5.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r12.xyzx, r17.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r11.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r5.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r5.w, r11.xyzx, r15.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r14.xyz, r5.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r11.xyzx, r16.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r10.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r1.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r5.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r2.w, r1.w  // i<0>
                loop 
                  ilt r6.w, r2.w, cb0[901].x
                  breakc_z r6.w
                
                #line 384
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r6.w, r2.w, l(5)
                  mov r11.xyz, cb0[r6.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r6.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r6.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r6.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r6.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r6.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r6.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r6.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r6.w, r7.w, r16.y
                
                #line 124
                  if_z r6.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r6.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r6.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r8.w, r11.xyzx, r17.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r14.xyz, r8.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r11.xyzx, r18.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r10.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r6.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r9.xyz, r7.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r6.w, r15.xyzx, r16.xyzx
                    div r6.w, l(1.000000), r6.w  // att<0:NaN:Inf>
                    mul r9.xyz, r6.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r6.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r6.w, r2.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r6.w + 0].xyzx
                  mul r9.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r2.w, r2.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r1.w  // i<0>
                loop 
                  ilt r2.w, r2.y, cb0[1502].x
                  breakc_z r2.w
                
                #line 397
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r2.y, l(6)
                  mov r12.xyz, cb0[r2.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.w + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r2.w + 905].w  // L<15>
                  mov r2.w, cb0[r2.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r18.y
                
                #line 176
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r5.x, r12.xyzx, r19.xyzx
                    add r5.x, r5.x, r5.x
                    mov r5.x, -r5.x
                    mul r15.xyz, r5.xxxx, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.x, r15.xyzx, r20.xyzx
                    max r5.x, r5.x, l(0.000000)
                    log r5.x, r5.x
                    mul r5.x, r5.x, r11.w
                    exp r5.x, r5.x  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.xxxx
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r10.xyz, r4.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r12.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r2.w, r2.w, r3.w
                    exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r3.w, r17.xyzx, r18.xyzx
                    div r3.w, r2.w, r3.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r2.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r2.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r2.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r8.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, cb1[29].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 382 instruction slots used
                            
            };
        }

    }

    technique11 Light2FogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                  add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r2.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r2.x, r2.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r2.x, r2.x  // shadow<0:[0f,1f]>
                else 
                  mov r2.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r3.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r3.w, r6.xyzx, r10.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r9.xyz, r3.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r6.xyzx, r11.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r5.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r1.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r2.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:Inf>
                mov r6.y, r3.y  // ambient<1:Inf>
                mov r6.z, r3.z  // ambient<2:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r5.w, r12.xyzx, r16.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r15.xyz, r5.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r12.xyzx, r17.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r11.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r5.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r5.w, r11.xyzx, r15.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r14.xyz, r5.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r11.xyzx, r16.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r10.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r1.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r5.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r2.w, r1.w  // i<0>
                loop 
                  ilt r6.w, r2.w, cb0[901].x
                  breakc_z r6.w
                
                #line 384
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r6.w, r2.w, l(5)
                  mov r11.xyz, cb0[r6.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r6.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r6.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r6.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r6.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r6.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r6.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r6.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r6.w, r7.w, r16.y
                
                #line 124
                  if_z r6.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r6.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r6.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r8.w, r11.xyzx, r17.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r14.xyz, r8.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r11.xyzx, r18.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r10.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r6.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r9.xyz, r7.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r6.w, r15.xyzx, r16.xyzx
                    div r6.w, l(1.000000), r6.w  // att<0:NaN:Inf>
                    mul r9.xyz, r6.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r6.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r6.w, r2.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r6.w + 0].xyzx
                  mul r9.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r2.w, r2.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r1.w  // i<0>
                loop 
                  ilt r2.w, r2.y, cb0[1502].x
                  breakc_z r2.w
                
                #line 397
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r2.y, l(6)
                  mov r12.xyz, cb0[r2.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.w + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r2.w + 905].w  // L<15>
                  mov r2.w, cb0[r2.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r18.y
                
                #line 176
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r5.x, r12.xyzx, r19.xyzx
                    add r5.x, r5.x, r5.x
                    mov r5.x, -r5.x
                    mul r15.xyz, r5.xxxx, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.x, r15.xyzx, r20.xyzx
                    max r5.x, r5.x, l(0.000000)
                    log r5.x, r5.x
                    mul r5.x, r5.x, r11.w
                    exp r5.x, r5.x  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.xxxx
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r10.xyz, r4.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r12.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r2.w, r2.w, r3.w
                    exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r3.w, r17.xyzx, r18.xyzx
                    div r3.w, r2.w, r3.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r2.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r2.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r2.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r8.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, cb1[29].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 382 instruction slots used
                            
            };
        }

    }

    technique11 Light3FogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                  add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                  add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                  add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                  add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                  add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s1, r2.x
                  add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r2.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r2.x, r2.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r2.x, r2.x  // shadow<0:[0f,1f]>
                else 
                  mov r2.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r3.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r3.w, r6.xyzx, r10.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r9.xyz, r3.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r6.xyzx, r11.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r5.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r1.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r2.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:Inf>
                mov r6.y, r3.y  // ambient<1:Inf>
                mov r6.z, r3.z  // ambient<2:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r5.w, r12.xyzx, r16.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r15.xyz, r5.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r12.xyzx, r17.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r11.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r5.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r2.w, l(0.000000), r1.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r5.w, r11.xyzx, r15.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r14.xyz, r5.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r11.xyzx, r16.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r10.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r1.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r5.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r2.w, r1.w  // i<0>
                loop 
                  ilt r6.w, r2.w, cb0[901].x
                  breakc_z r6.w
                
                #line 384
                  nop 
                  mov r8.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r6.w, r2.w, l(5)
                  mov r11.xyz, cb0[r6.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r6.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r6.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r6.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r6.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r6.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r6.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r6.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r6.w, r7.w, r16.y
                
                #line 124
                  if_z r6.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r6.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r7.w, l(0.000000), r6.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r8.w, r11.xyzx, r17.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r14.xyz, r8.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r11.xyzx, r18.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r10.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r6.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r9.xyz, r7.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r6.w, r15.xyzx, r16.xyzx
                    div r6.w, l(1.000000), r6.w  // att<0:NaN:Inf>
                    mul r9.xyz, r6.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r6.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r6.w, r2.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r6.w + 0].xyzx
                  mul r9.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r2.w, r2.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r1.w  // i<0>
                loop 
                  ilt r2.w, r2.y, cb0[1502].x
                  breakc_z r2.w
                
                #line 397
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r2.y, l(6)
                  mov r12.xyz, cb0[r2.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.w + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r2.w + 905].w  // L<15>
                  mov r2.w, cb0[r2.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r4.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r4.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r3.w, r3.w, r18.y
                
                #line 176
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r3.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r4.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r5.x, r12.xyzx, r19.xyzx
                    add r5.x, r5.x, r5.x
                    mov r5.x, -r5.x
                    mul r15.xyz, r5.xxxx, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.x, r15.xyzx, r20.xyzx
                    max r5.x, r5.x, l(0.000000)
                    log r5.x, r5.x
                    mul r5.x, r5.x, r11.w
                    exp r5.x, r5.x  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.xxxx
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r10.xyz, r4.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r3.w, r12.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r2.w, r2.w, r3.w
                    exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r3.w, r17.xyzx, r18.xyzx
                    div r3.w, r2.w, r3.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r2.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r2.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r2.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r8.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, cb1[29].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 382 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400 [unused]
                //   int dirLight_size;                 // Offset: 6400 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000 [unused]
                //   int pointLight_size;               // Offset: 14416 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600 [unused]
                //   int spotLight_size;                // Offset: 24032 Size:     4 [unused]
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[1505], immediateIndexed
                dcl_constantbuffer cb1[30], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 307 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, -v1.xyzx
                add r0.xyz, r0.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 346
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 432
                mov r0.y, -cb0[1503].x
                add r0.x, r0.y, r0.x
                div r0.x, r0.x, cb0[1503].y
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[1504].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r1.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 19 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r7.w, r8.w, r17.y
                
                #line 124
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r4.w, r4.w, r19.y
                
                #line 176
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 383 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r7.w, r8.w, r17.y
                
                #line 124
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r4.w, r4.w, r19.y
                
                #line 176
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 383 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r7.w, r8.w, r17.y
                
                #line 124
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r4.w, r4.w, r19.y
                
                #line 176
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 383 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400 [unused]
                //   int dirLight_size;                 // Offset: 6400 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000 [unused]
                //   int pointLight_size;               // Offset: 14416 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600 [unused]
                //   int spotLight_size;                // Offset: 24032 Size:     4 [unused]
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[1505], immediateIndexed
                dcl_constantbuffer cb1[30], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 307 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, -v1.xyzx
                add r0.xyz, r0.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r0.y, r1.w, l(-0.100000)
                lt r0.y, r0.y, l(0.000000)
                and r0.y, r0.y, l(-1)
                discard r0.y
                
                #line 346
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 432
                mov r0.y, -cb0[1503].x
                add r0.x, r0.y, r0.x
                div r0.x, r0.x, cb0[1503].y
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[1504].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r1.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 23 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r7.w, r8.w, r17.y
                
                #line 124
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r4.w, r4.w, r19.y
                
                #line 176
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 387 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r7.w, r8.w, r17.y
                
                #line 124
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r4.w, r4.w, r19.y
                
                #line 176
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 387 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64 [unused]
                //   bool isShadowed;                   // Offset:  512 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                // COLOR                    0   xyzw        6     NONE  float   xyzw
                // instanceID               0   x           7     NONE   uint       
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[28], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_output o6.xyzw
                dcl_temps 7
                
                #line 240 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 244
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 247
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[20].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[21].xyzw  // vout<11:NaN:Inf>
                
                #line 250
                dp4 r4.x, r0.xyzw, cb0[24].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[25].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[26].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[27].xyzw  // vout<15:NaN:Inf>
                
                #line 253
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                
                #line 257
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                mov o6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // VS<20: 1f,21: 1f,22: 1f,23: 1f>
                ret 
                // Approximately 32 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  256 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  320 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  384 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  448
                //       float4 Diffuse;                // Offset:  464
                //       float4 Specular;               // Offset:  480
                //       float4 Reflect;                // Offset:  496
                //
                //   } gMaterial;                       // Offset:  448 Size:    64
                //   bool isShadowed;                   // Offset:  512 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float       
                // COLOR                    0   xyzw        6     NONE  float       
                // instanceID               0   x           7     NONE   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[33], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 304 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 307
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 310
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 313
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 329
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 338
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 356
                ine r1.w, l(0, 0, 0, 0), cb1[32].x
                if_nz r1.w
                  nop 
                  mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 241 "LightHelper.fx"
                  div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 244
                  mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 261
                  add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                  add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                  add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                  add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                  add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                  add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                  add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                  add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 264
                  div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                  mov r3.x, r3.x  // CalcShadowFactor<0:[0f,1f]>
                
                #line 358 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.x, r3.x  // shadow<0:[0f,1f]>
                else 
                  mov r3.x, l(1.000000)  // shadow<0: 1f>
                endif 
                
                #line 369
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r4.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:Inf,1:Inf,2:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:Inf>
                mov r7.y, r4.y  // ambient<1:Inf>
                mov r7.z, r4.z  // ambient<2:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r8.yzxy, r11.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r8.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r8.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 372
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 78 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 81
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 86
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 90
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 90
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 372 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 376
                  mul r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r10.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 371
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 381
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 384
                  nop 
                  mov r9.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 114 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 117
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 120
                  lt r7.w, r8.w, r17.y
                
                #line 124
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 127
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 132
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 136
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 136
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 146
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 384 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 388
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r10.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 381
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 394
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 397
                  nop 
                  mov r10.xyz, cb1[28].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[29].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[30].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 169
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 172
                  lt r4.w, r4.w, r19.y
                
                #line 176
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 184
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 188
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 188
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 198
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 201
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 397 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 401
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r11.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 394
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 414
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 418
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[31].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 432
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 435
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 439
                mul r0.w, r2.w, cb1[29].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 387 instruction slots used
                            
            };
        }

    }

}

