//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLights[100];   // Offset:    0, size: 6400
    int     dirLight_size = 0;          // Offset: 6400, size:    4
    PointLight gPointLights[100];       // Offset: 6416, size: 8000
    int     pointLight_size = 0;        // Offset: 14416, size:    4
    SpotLight gSpotLights[100];         // Offset: 14432, size: 9600
    int     spotLight_size = 0;         // Offset: 24032, size:    4
    float3  gEyePosW;                   // Offset: 24036, size:   12
    float   gFogStart;                  // Offset: 24048, size:    4
    float   gFogRange;                  // Offset: 24052, size:    4
    float4  gFogColor;                  // Offset: 24064, size:   16
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInvTranspose;        // Offset:   64, size:   64
    float4x4 gWorldViewProj;            // Offset:  128, size:   64
    float4x4 gWorldViewProjTex;         // Offset:  192, size:   64
    float4x4 gTexTransform;             // Offset:  256, size:   64
    float4x4 gShadowTransform;          // Offset:  320, size:   64
    Material gMaterial;                 // Offset:  384, size:   64
}

//
// 6 local object(s)
//
Texture2D gDiffuseMap;
Texture2D gShadowMap;
Texture2D gSsaoMap;
TextureCube gCubeMap;
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerComparisonState samShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 44 technique(s)
    //
    technique11 Light1
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gSsaoMap                          texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 155
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 258
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r2.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r3.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r3.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r3.w, r6.xyzx, r10.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r9.xyz, r3.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r6.xyzx, r11.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r5.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r1.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r2.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r3.xyz, r0.wwww, r3.xyzx
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:NaN:Inf>
                mov r6.y, r3.y  // ambient<1:NaN:Inf>
                mov r6.z, r3.z  // ambient<2:NaN:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r5.w, r12.xyzx, r16.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r15.xyz, r5.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r12.xyzx, r17.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r11.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r5.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r7.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r5.w, r11.xyzx, r15.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r14.xyz, r5.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r11.xyzx, r16.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r10.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r1.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r5.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r8.xyz, r0.wwww, r8.xyzx
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r2.w, r1.w  // i<0>
                loop 
                  ilt r6.w, r2.w, cb0[901].x
                  breakc_z r6.w
                
                #line 177
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r6.w, r2.w, l(5)
                  mov r11.xyz, cb0[r6.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r6.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r6.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r6.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r6.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r6.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r6.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r6.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r6.w, r7.w, r16.y
                
                #line 121
                  if_z r6.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r6.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r7.w, l(0.000000), r6.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r8.w, r11.xyzx, r17.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r14.xyz, r8.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r11.xyzx, r18.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r10.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r6.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r9.xyz, r7.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r6.w, r15.xyzx, r16.xyzx
                    div r6.w, l(1.000000), r6.w  // att<0:NaN:Inf>
                    mul r9.xyz, r6.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r6.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r8.xyz, r0.wwww, r8.xyzx
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.w, r2.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r6.w + 0].xyzx
                  mul r8.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r2.w, r2.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r1.w  // i<0>
                loop 
                  ilt r2.w, r2.y, cb0[1502].x
                  breakc_z r2.w
                
                #line 188
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r2.y, l(6)
                  mov r12.xyz, cb0[r2.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.w + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r2.w + 905].w  // L<15>
                  mov r2.w, cb0[r2.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r4.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r4.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r3.w, r3.w, r18.y
                
                #line 173
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r3.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r4.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r5.x, r12.xyzx, r19.xyzx
                    add r5.x, r5.x, r5.x
                    mov r5.x, -r5.x
                    mul r15.xyz, r5.xxxx, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.x, r15.xyzx, r20.xyzx
                    max r5.x, r5.x, l(0.000000)
                    log r5.x, r5.x
                    mul r5.x, r5.x, r11.w
                    exp r5.x, r5.x  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.xxxx
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r10.xyz, r4.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r3.w, r12.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r2.w, r2.w, r3.w
                    exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r3.w, r17.xyzx, r18.xyzx
                    div r3.w, r2.w, r3.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r2.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r2.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r3.xyzx, r4.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r8.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, cb1[25].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 364 instruction slots used
                            
            };
        }

    }

    technique11 Light2
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gSsaoMap                          texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 155
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 258
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r2.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r3.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r3.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r3.w, r6.xyzx, r10.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r9.xyz, r3.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r6.xyzx, r11.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r5.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r1.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r2.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r3.xyz, r0.wwww, r3.xyzx
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:NaN:Inf>
                mov r6.y, r3.y  // ambient<1:NaN:Inf>
                mov r6.z, r3.z  // ambient<2:NaN:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r5.w, r12.xyzx, r16.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r15.xyz, r5.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r12.xyzx, r17.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r11.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r5.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r7.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r5.w, r11.xyzx, r15.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r14.xyz, r5.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r11.xyzx, r16.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r10.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r1.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r5.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r8.xyz, r0.wwww, r8.xyzx
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r2.w, r1.w  // i<0>
                loop 
                  ilt r6.w, r2.w, cb0[901].x
                  breakc_z r6.w
                
                #line 177
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r6.w, r2.w, l(5)
                  mov r11.xyz, cb0[r6.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r6.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r6.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r6.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r6.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r6.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r6.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r6.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r6.w, r7.w, r16.y
                
                #line 121
                  if_z r6.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r6.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r7.w, l(0.000000), r6.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r8.w, r11.xyzx, r17.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r14.xyz, r8.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r11.xyzx, r18.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r10.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r6.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r9.xyz, r7.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r6.w, r15.xyzx, r16.xyzx
                    div r6.w, l(1.000000), r6.w  // att<0:NaN:Inf>
                    mul r9.xyz, r6.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r6.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r8.xyz, r0.wwww, r8.xyzx
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.w, r2.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r6.w + 0].xyzx
                  mul r8.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r2.w, r2.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r1.w  // i<0>
                loop 
                  ilt r2.w, r2.y, cb0[1502].x
                  breakc_z r2.w
                
                #line 188
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r2.y, l(6)
                  mov r12.xyz, cb0[r2.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.w + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r2.w + 905].w  // L<15>
                  mov r2.w, cb0[r2.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r4.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r4.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r3.w, r3.w, r18.y
                
                #line 173
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r3.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r4.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r5.x, r12.xyzx, r19.xyzx
                    add r5.x, r5.x, r5.x
                    mov r5.x, -r5.x
                    mul r15.xyz, r5.xxxx, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.x, r15.xyzx, r20.xyzx
                    max r5.x, r5.x, l(0.000000)
                    log r5.x, r5.x
                    mul r5.x, r5.x, r11.w
                    exp r5.x, r5.x  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.xxxx
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r10.xyz, r4.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r3.w, r12.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r2.w, r2.w, r3.w
                    exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r3.w, r17.xyzx, r18.xyzx
                    div r3.w, r2.w, r3.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r2.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r2.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r3.xyzx, r4.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r8.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, cb1[25].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 364 instruction slots used
                            
            };
        }

    }

    technique11 Light3
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gSsaoMap                          texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 155
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 258
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r2.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r3.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r3.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r3.w, r6.xyzx, r10.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r9.xyz, r3.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r6.xyzx, r11.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r5.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r1.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r2.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r3.xyz, r0.wwww, r3.xyzx
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:NaN:Inf>
                mov r6.y, r3.y  // ambient<1:NaN:Inf>
                mov r6.z, r3.z  // ambient<2:NaN:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r5.w, r12.xyzx, r16.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r15.xyz, r5.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r12.xyzx, r17.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r11.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r5.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r7.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r5.w, r11.xyzx, r15.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r14.xyz, r5.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r11.xyzx, r16.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r10.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r1.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r5.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r8.xyz, r0.wwww, r8.xyzx
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r2.w, r1.w  // i<0>
                loop 
                  ilt r6.w, r2.w, cb0[901].x
                  breakc_z r6.w
                
                #line 177
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r6.w, r2.w, l(5)
                  mov r11.xyz, cb0[r6.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r6.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r6.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r6.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r6.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r6.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r6.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r6.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r6.w, r7.w, r16.y
                
                #line 121
                  if_z r6.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r6.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r7.w, l(0.000000), r6.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r8.w, r11.xyzx, r17.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r14.xyz, r8.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r11.xyzx, r18.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r10.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r6.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r9.xyz, r7.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r6.w, r15.xyzx, r16.xyzx
                    div r6.w, l(1.000000), r6.w  // att<0:NaN:Inf>
                    mul r9.xyz, r6.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r6.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r8.xyz, r0.wwww, r8.xyzx
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.w, r2.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r6.w + 0].xyzx
                  mul r8.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r2.w, r2.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r1.w  // i<0>
                loop 
                  ilt r2.w, r2.y, cb0[1502].x
                  breakc_z r2.w
                
                #line 188
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r2.y, l(6)
                  mov r12.xyz, cb0[r2.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.w + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r2.w + 905].w  // L<15>
                  mov r2.w, cb0[r2.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r4.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r4.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r3.w, r3.w, r18.y
                
                #line 173
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r3.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r4.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r5.x, r12.xyzx, r19.xyzx
                    add r5.x, r5.x, r5.x
                    mov r5.x, -r5.x
                    mul r15.xyz, r5.xxxx, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.x, r15.xyzx, r20.xyzx
                    max r5.x, r5.x, l(0.000000)
                    log r5.x, r5.x
                    mul r5.x, r5.x, r11.w
                    exp r5.x, r5.x  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.xxxx
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r10.xyz, r4.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r3.w, r12.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r2.w, r2.w, r3.w
                    exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r3.w, r17.xyzx, r18.xyzx
                    div r3.w, r2.w, r3.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r2.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r2.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r3.xyzx, r4.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r8.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, cb1[25].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 364 instruction slots used
                            
            };
        }

    }

    technique11 Light0Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[26], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 130 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 145
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 222
                mul r0.w, r0.w, cb0[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 6 instruction slots used
                            
            };
        }

    }

    technique11 Light1Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r0.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r17.y
                
                #line 121
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r19.y
                
                #line 173
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 365 instruction slots used
                            
            };
        }

    }

    technique11 Light2Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r0.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r17.y
                
                #line 121
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r19.y
                
                #line 173
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 365 instruction slots used
                            
            };
        }

    }

    technique11 Light3Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r0.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r17.y
                
                #line 121
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r19.y
                
                #line 173
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 365 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[26], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 130 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r1.x, r0.w, l(-0.100000)
                lt r1.x, r1.x, l(0.000000)
                and r1.x, r1.x, l(-1)
                discard r1.x
                
                #line 145
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 222
                mul r0.w, r0.w, cb0[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 10 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r0.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r17.y
                
                #line 121
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r19.y
                
                #line 173
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 369 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r0.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r17.y
                
                #line 121
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r19.y
                
                #line 173
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 369 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r0.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r17.y
                
                #line 121
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r19.y
                
                #line 173
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 369 instruction slots used
                            
            };
        }

    }

    technique11 Light1Fog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gSsaoMap                          texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 155
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 258
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r2.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r3.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r2.w, l(0), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r3.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r2.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r4.w, r6.xyzx, r10.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r9.xyz, r4.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r6.xyzx, r11.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r5.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r2.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r4.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r4.xyz, r3.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r3.xyz, r1.wwww, r3.xyzx
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:NaN:Inf>
                mov r6.y, r3.y  // ambient<1:NaN:Inf>
                mov r6.z, r3.z  // ambient<2:NaN:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r2.w, l(1), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r5.w, l(0.000000), r2.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r2.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r5.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r7.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r2.w, l(2), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r5.w, l(0.000000), r2.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r6.w, r11.xyzx, r15.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r14.xyz, r6.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r11.xyzx, r16.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r10.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r2.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r6.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r9.xyz, r5.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r5.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r8.xyz, r1.wwww, r8.xyzx
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r2.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r6.w, r2.w  // i<0>
                loop 
                  ilt r7.w, r6.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r6.w, l(5)
                  mov r11.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r16.y
                
                #line 121
                  if_z r7.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r9.w, r11.xyzx, r17.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r14.xyz, r9.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r11.xyzx, r18.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r10.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r7.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r9.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r9.xyz, r8.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r7.w, r15.xyzx, r16.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r9.xyz, r7.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r8.xyz, r1.wwww, r8.xyzx
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r6.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r7.w + 0].xyzx
                  mul r8.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r6.w, r6.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r2.w  // i<0>
                loop 
                  ilt r3.w, r2.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r2.y, l(6)
                  mov r12.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.x, r15.xyzx, r15.xyzx
                  sqrt r18.y, r5.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r18.y
                
                #line 173
                  if_z r4.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.x, l(0.000000), r4.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r6.w, r12.xyzx, r19.xyzx
                    add r6.w, r6.w, r6.w
                    mov r6.w, -r6.w
                    mul r15.xyz, r6.wwww, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.w, r15.xyzx, r20.xyzx
                    max r6.w, r6.w, l(0.000000)
                    log r6.w, r6.w
                    mul r6.w, r6.w, r11.w
                    exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r4.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r6.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r10.xyz, r5.xxxx, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r5.xxxx, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r12.xyzx, r16.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r4.w, r17.xyzx, r18.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r9.xyz, r3.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r3.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r3.xyzx, r4.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r8.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, cb1[25].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 373 instruction slots used
                            
            };
        }

    }

    technique11 Light2Fog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gSsaoMap                          texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 155
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 258
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r2.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r3.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r2.w, l(0), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r3.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r2.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r4.w, r6.xyzx, r10.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r9.xyz, r4.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r6.xyzx, r11.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r5.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r2.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r4.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r4.xyz, r3.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r3.xyz, r1.wwww, r3.xyzx
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:NaN:Inf>
                mov r6.y, r3.y  // ambient<1:NaN:Inf>
                mov r6.z, r3.z  // ambient<2:NaN:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r2.w, l(1), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r5.w, l(0.000000), r2.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r2.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r5.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r7.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r2.w, l(2), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r5.w, l(0.000000), r2.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r6.w, r11.xyzx, r15.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r14.xyz, r6.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r11.xyzx, r16.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r10.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r2.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r6.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r9.xyz, r5.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r5.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r8.xyz, r1.wwww, r8.xyzx
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r2.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r6.w, r2.w  // i<0>
                loop 
                  ilt r7.w, r6.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r6.w, l(5)
                  mov r11.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r16.y
                
                #line 121
                  if_z r7.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r9.w, r11.xyzx, r17.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r14.xyz, r9.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r11.xyzx, r18.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r10.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r7.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r9.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r9.xyz, r8.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r7.w, r15.xyzx, r16.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r9.xyz, r7.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r8.xyz, r1.wwww, r8.xyzx
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r6.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r7.w + 0].xyzx
                  mul r8.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r6.w, r6.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r2.w  // i<0>
                loop 
                  ilt r3.w, r2.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r2.y, l(6)
                  mov r12.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.x, r15.xyzx, r15.xyzx
                  sqrt r18.y, r5.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r18.y
                
                #line 173
                  if_z r4.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.x, l(0.000000), r4.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r6.w, r12.xyzx, r19.xyzx
                    add r6.w, r6.w, r6.w
                    mov r6.w, -r6.w
                    mul r15.xyz, r6.wwww, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.w, r15.xyzx, r20.xyzx
                    max r6.w, r6.w, l(0.000000)
                    log r6.w, r6.w
                    mul r6.w, r6.w, r11.w
                    exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r4.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r6.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r10.xyz, r5.xxxx, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r5.xxxx, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r12.xyzx, r16.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r4.w, r17.xyzx, r18.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r9.xyz, r3.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r3.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r3.xyzx, r4.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r8.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, cb1[25].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 373 instruction slots used
                            
            };
        }

    }

    technique11 Light3Fog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gSsaoMap                          texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 155
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 258
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r2.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r3.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r2.w, l(0), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r3.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r2.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r4.w, r6.xyzx, r10.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r9.xyz, r4.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r6.xyzx, r11.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r5.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r2.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r4.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r4.xyz, r3.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r3.xyz, r1.wwww, r3.xyzx
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:NaN:Inf>
                mov r6.y, r3.y  // ambient<1:NaN:Inf>
                mov r6.z, r3.z  // ambient<2:NaN:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r2.w, l(1), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r5.w, l(0.000000), r2.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r2.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r5.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r7.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r2.w, l(2), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r5.w, l(0.000000), r2.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r6.w, r11.xyzx, r15.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r14.xyz, r6.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r11.xyzx, r16.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r10.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r2.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r6.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r9.xyz, r5.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r5.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r8.xyz, r1.wwww, r8.xyzx
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r2.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r6.w, r2.w  // i<0>
                loop 
                  ilt r7.w, r6.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r6.w, l(5)
                  mov r11.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r16.y
                
                #line 121
                  if_z r7.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r9.w, r11.xyzx, r17.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r14.xyz, r9.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r11.xyzx, r18.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r10.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r7.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r9.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r9.xyz, r8.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r7.w, r15.xyzx, r16.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r9.xyz, r7.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r8.xyz, r1.wwww, r8.xyzx
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r6.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r7.w + 0].xyzx
                  mul r8.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r6.w, r6.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r2.w  // i<0>
                loop 
                  ilt r3.w, r2.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r2.y, l(6)
                  mov r12.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.x, r15.xyzx, r15.xyzx
                  sqrt r18.y, r5.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r18.y
                
                #line 173
                  if_z r4.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.x, l(0.000000), r4.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r6.w, r12.xyzx, r19.xyzx
                    add r6.w, r6.w, r6.w
                    mov r6.w, -r6.w
                    mul r15.xyz, r6.wwww, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.w, r15.xyzx, r20.xyzx
                    max r6.w, r6.w, l(0.000000)
                    log r6.w, r6.w
                    mul r6.w, r6.w, r11.w
                    exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r4.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r6.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r10.xyz, r5.xxxx, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r5.xxxx, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r12.xyzx, r16.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r4.w, r17.xyzx, r18.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r9.xyz, r3.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r3.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r3.xyzx, r4.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r8.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, cb1[25].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 373 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400 [unused]
                //   int dirLight_size;                 // Offset: 6400 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000 [unused]
                //   int pointLight_size;               // Offset: 14416 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600 [unused]
                //   int spotLight_size;                // Offset: 24032 Size:     4 [unused]
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[1505], immediateIndexed
                dcl_constantbuffer cb1[26], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 116 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, -v1.xyzx
                add r0.xyz, r0.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 145
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 215
                mov r0.y, -cb0[1503].x
                add r0.x, r0.y, r0.x
                div r0.x, r0.x, cb0[1503].y
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[1504].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r1.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 19 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r3.w, l(0), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r4.w, l(0.000000), r3.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r5.w, r7.xyzx, r11.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r10.xyz, r5.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r7.xyzx, r12.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r6.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r5.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r4.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r4.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r1.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(1), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r7.w, r13.xyzx, r17.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r16.xyz, r7.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r13.xyzx, r18.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r12.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r7.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r6.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(2), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r7.w, r12.xyzx, r16.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r15.xyz, r7.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r12.xyzx, r17.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r11.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r3.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r7.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r3.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r7.w, r3.w  // i<0>
                loop 
                  ilt r8.w, r7.w, cb0[901].x
                  breakc_z r8.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r8.w, r7.w, l(5)
                  mov r12.xyz, cb0[r8.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r8.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r8.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r8.w + 404].xyzx  // L<12,13,14>
                  mov r9.w, cb0[r8.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r8.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r8.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r8.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r8.w, r9.w, r17.y
                
                #line 121
                  if_z r8.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r8.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r9.w, l(0.000000), r8.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r10.w, r12.xyzx, r18.xyzx
                    add r10.w, r10.w, r10.w
                    mov r10.w, -r10.w
                    mul r15.xyz, r10.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r10.w, r12.xyzx, r19.xyzx
                    max r10.w, r10.w, l(0.000000)
                    log r10.w, r10.w
                    mul r10.w, r10.w, r11.w
                    exp r10.w, r10.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r10.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r9.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r9.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r8.w, r16.xyzx, r17.xyzx
                    div r8.w, l(1.000000), r8.w  // att<0:NaN:Inf>
                    mul r10.xyz, r8.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r8.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.w, r7.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r8.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r7.w, r7.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r3.w  // i<0>
                loop 
                  ilt r4.w, r3.y, cb0[1502].x
                  breakc_z r4.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r4.w, r3.y, l(6)
                  mov r13.xyz, cb0[r4.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r4.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r4.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r4.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r4.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r4.w + 907].xyzx  // L<20,21,22>
                  mov r5.w, cb0[r4.w + 905].w  // L<15>
                  mov r4.w, cb0[r4.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r6.x, r16.xyzx, r16.xyzx
                  sqrt r19.y, r6.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r5.w, r5.w, r19.y
                
                #line 173
                  if_z r5.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r5.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r6.x, l(0.000000), r5.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r7.w, r13.xyzx, r20.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r16.xyz, r7.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r16.xyzx, r21.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r12.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r7.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r6.xxxx, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r6.xxxx, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r5.w, r13.xyzx, r17.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r4.w, r4.w, r5.w
                    exp r4.w, r4.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r5.w, r18.xyzx, r19.xyzx
                    div r5.w, r4.w, r5.w  // att<0:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r5.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r5.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r4.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r4.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 374 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r3.w, l(0), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r4.w, l(0.000000), r3.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r5.w, r7.xyzx, r11.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r10.xyz, r5.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r7.xyzx, r12.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r6.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r5.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r4.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r4.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r1.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(1), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r7.w, r13.xyzx, r17.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r16.xyz, r7.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r13.xyzx, r18.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r12.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r7.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r6.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(2), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r7.w, r12.xyzx, r16.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r15.xyz, r7.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r12.xyzx, r17.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r11.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r3.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r7.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r3.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r7.w, r3.w  // i<0>
                loop 
                  ilt r8.w, r7.w, cb0[901].x
                  breakc_z r8.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r8.w, r7.w, l(5)
                  mov r12.xyz, cb0[r8.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r8.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r8.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r8.w + 404].xyzx  // L<12,13,14>
                  mov r9.w, cb0[r8.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r8.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r8.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r8.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r8.w, r9.w, r17.y
                
                #line 121
                  if_z r8.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r8.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r9.w, l(0.000000), r8.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r10.w, r12.xyzx, r18.xyzx
                    add r10.w, r10.w, r10.w
                    mov r10.w, -r10.w
                    mul r15.xyz, r10.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r10.w, r12.xyzx, r19.xyzx
                    max r10.w, r10.w, l(0.000000)
                    log r10.w, r10.w
                    mul r10.w, r10.w, r11.w
                    exp r10.w, r10.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r10.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r9.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r9.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r8.w, r16.xyzx, r17.xyzx
                    div r8.w, l(1.000000), r8.w  // att<0:NaN:Inf>
                    mul r10.xyz, r8.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r8.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.w, r7.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r8.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r7.w, r7.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r3.w  // i<0>
                loop 
                  ilt r4.w, r3.y, cb0[1502].x
                  breakc_z r4.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r4.w, r3.y, l(6)
                  mov r13.xyz, cb0[r4.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r4.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r4.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r4.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r4.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r4.w + 907].xyzx  // L<20,21,22>
                  mov r5.w, cb0[r4.w + 905].w  // L<15>
                  mov r4.w, cb0[r4.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r6.x, r16.xyzx, r16.xyzx
                  sqrt r19.y, r6.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r5.w, r5.w, r19.y
                
                #line 173
                  if_z r5.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r5.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r6.x, l(0.000000), r5.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r7.w, r13.xyzx, r20.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r16.xyz, r7.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r16.xyzx, r21.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r12.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r7.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r6.xxxx, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r6.xxxx, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r5.w, r13.xyzx, r17.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r4.w, r4.w, r5.w
                    exp r4.w, r4.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r5.w, r18.xyzx, r19.xyzx
                    div r5.w, r4.w, r5.w  // att<0:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r5.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r5.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r4.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r4.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 374 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r3.w, l(0), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r4.w, l(0.000000), r3.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r5.w, r7.xyzx, r11.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r10.xyz, r5.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r7.xyzx, r12.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r6.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r5.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r4.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r4.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r1.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(1), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r7.w, r13.xyzx, r17.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r16.xyz, r7.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r13.xyzx, r18.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r12.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r7.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r6.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(2), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r7.w, r12.xyzx, r16.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r15.xyz, r7.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r12.xyzx, r17.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r11.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r3.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r7.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r3.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r7.w, r3.w  // i<0>
                loop 
                  ilt r8.w, r7.w, cb0[901].x
                  breakc_z r8.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r8.w, r7.w, l(5)
                  mov r12.xyz, cb0[r8.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r8.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r8.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r8.w + 404].xyzx  // L<12,13,14>
                  mov r9.w, cb0[r8.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r8.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r8.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r8.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r8.w, r9.w, r17.y
                
                #line 121
                  if_z r8.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r8.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r9.w, l(0.000000), r8.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r10.w, r12.xyzx, r18.xyzx
                    add r10.w, r10.w, r10.w
                    mov r10.w, -r10.w
                    mul r15.xyz, r10.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r10.w, r12.xyzx, r19.xyzx
                    max r10.w, r10.w, l(0.000000)
                    log r10.w, r10.w
                    mul r10.w, r10.w, r11.w
                    exp r10.w, r10.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r10.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r9.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r9.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r8.w, r16.xyzx, r17.xyzx
                    div r8.w, l(1.000000), r8.w  // att<0:NaN:Inf>
                    mul r10.xyz, r8.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r8.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.w, r7.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r8.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r7.w, r7.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r3.w  // i<0>
                loop 
                  ilt r4.w, r3.y, cb0[1502].x
                  breakc_z r4.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r4.w, r3.y, l(6)
                  mov r13.xyz, cb0[r4.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r4.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r4.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r4.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r4.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r4.w + 907].xyzx  // L<20,21,22>
                  mov r5.w, cb0[r4.w + 905].w  // L<15>
                  mov r4.w, cb0[r4.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r6.x, r16.xyzx, r16.xyzx
                  sqrt r19.y, r6.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r5.w, r5.w, r19.y
                
                #line 173
                  if_z r5.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r5.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r6.x, l(0.000000), r5.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r7.w, r13.xyzx, r20.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r16.xyz, r7.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r16.xyzx, r21.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r12.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r7.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r6.xxxx, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r6.xxxx, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r5.w, r13.xyzx, r17.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r4.w, r4.w, r5.w
                    exp r4.w, r4.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r5.w, r18.xyzx, r19.xyzx
                    div r5.w, r4.w, r5.w  // att<0:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r5.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r5.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r4.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r4.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 374 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400 [unused]
                //   int dirLight_size;                 // Offset: 6400 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000 [unused]
                //   int pointLight_size;               // Offset: 14416 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600 [unused]
                //   int spotLight_size;                // Offset: 24032 Size:     4 [unused]
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[1505], immediateIndexed
                dcl_constantbuffer cb1[26], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 116 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, -v1.xyzx
                add r0.xyz, r0.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r0.y, r1.w, l(-0.100000)
                lt r0.y, r0.y, l(0.000000)
                and r0.y, r0.y, l(-1)
                discard r0.y
                
                #line 145
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 215
                mov r0.y, -cb0[1503].x
                add r0.x, r0.y, r0.x
                div r0.x, r0.x, cb0[1503].y
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[1504].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r1.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 23 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r3.w, l(0), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r4.w, l(0.000000), r3.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r5.w, r7.xyzx, r11.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r10.xyz, r5.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r7.xyzx, r12.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r6.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r5.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r4.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r4.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r1.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(1), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r7.w, r13.xyzx, r17.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r16.xyz, r7.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r13.xyzx, r18.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r12.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r7.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r6.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(2), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r7.w, r12.xyzx, r16.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r15.xyz, r7.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r12.xyzx, r17.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r11.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r3.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r7.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r3.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r7.w, r3.w  // i<0>
                loop 
                  ilt r8.w, r7.w, cb0[901].x
                  breakc_z r8.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r8.w, r7.w, l(5)
                  mov r12.xyz, cb0[r8.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r8.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r8.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r8.w + 404].xyzx  // L<12,13,14>
                  mov r9.w, cb0[r8.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r8.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r8.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r8.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r8.w, r9.w, r17.y
                
                #line 121
                  if_z r8.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r8.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r9.w, l(0.000000), r8.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r10.w, r12.xyzx, r18.xyzx
                    add r10.w, r10.w, r10.w
                    mov r10.w, -r10.w
                    mul r15.xyz, r10.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r10.w, r12.xyzx, r19.xyzx
                    max r10.w, r10.w, l(0.000000)
                    log r10.w, r10.w
                    mul r10.w, r10.w, r11.w
                    exp r10.w, r10.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r10.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r9.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r9.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r8.w, r16.xyzx, r17.xyzx
                    div r8.w, l(1.000000), r8.w  // att<0:NaN:Inf>
                    mul r10.xyz, r8.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r8.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.w, r7.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r8.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r7.w, r7.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r3.w  // i<0>
                loop 
                  ilt r4.w, r3.y, cb0[1502].x
                  breakc_z r4.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r4.w, r3.y, l(6)
                  mov r13.xyz, cb0[r4.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r4.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r4.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r4.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r4.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r4.w + 907].xyzx  // L<20,21,22>
                  mov r5.w, cb0[r4.w + 905].w  // L<15>
                  mov r4.w, cb0[r4.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r6.x, r16.xyzx, r16.xyzx
                  sqrt r19.y, r6.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r5.w, r5.w, r19.y
                
                #line 173
                  if_z r5.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r5.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r6.x, l(0.000000), r5.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r7.w, r13.xyzx, r20.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r16.xyz, r7.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r16.xyzx, r21.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r12.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r7.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r6.xxxx, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r6.xxxx, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r5.w, r13.xyzx, r17.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r4.w, r4.w, r5.w
                    exp r4.w, r4.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r5.w, r18.xyzx, r19.xyzx
                    div r5.w, r4.w, r5.w  // att<0:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r5.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r5.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r4.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r4.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 378 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r3.w, l(0), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r4.w, l(0.000000), r3.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r5.w, r7.xyzx, r11.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r10.xyz, r5.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r7.xyzx, r12.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r6.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r5.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r4.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r4.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r1.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(1), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r7.w, r13.xyzx, r17.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r16.xyz, r7.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r13.xyzx, r18.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r12.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r7.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r6.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(2), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r7.w, r12.xyzx, r16.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r15.xyz, r7.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r12.xyzx, r17.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r11.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r3.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r7.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r3.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r7.w, r3.w  // i<0>
                loop 
                  ilt r8.w, r7.w, cb0[901].x
                  breakc_z r8.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r8.w, r7.w, l(5)
                  mov r12.xyz, cb0[r8.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r8.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r8.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r8.w + 404].xyzx  // L<12,13,14>
                  mov r9.w, cb0[r8.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r8.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r8.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r8.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r8.w, r9.w, r17.y
                
                #line 121
                  if_z r8.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r8.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r9.w, l(0.000000), r8.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r10.w, r12.xyzx, r18.xyzx
                    add r10.w, r10.w, r10.w
                    mov r10.w, -r10.w
                    mul r15.xyz, r10.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r10.w, r12.xyzx, r19.xyzx
                    max r10.w, r10.w, l(0.000000)
                    log r10.w, r10.w
                    mul r10.w, r10.w, r11.w
                    exp r10.w, r10.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r10.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r9.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r9.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r8.w, r16.xyzx, r17.xyzx
                    div r8.w, l(1.000000), r8.w  // att<0:NaN:Inf>
                    mul r10.xyz, r8.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r8.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.w, r7.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r8.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r7.w, r7.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r3.w  // i<0>
                loop 
                  ilt r4.w, r3.y, cb0[1502].x
                  breakc_z r4.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r4.w, r3.y, l(6)
                  mov r13.xyz, cb0[r4.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r4.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r4.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r4.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r4.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r4.w + 907].xyzx  // L<20,21,22>
                  mov r5.w, cb0[r4.w + 905].w  // L<15>
                  mov r4.w, cb0[r4.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r6.x, r16.xyzx, r16.xyzx
                  sqrt r19.y, r6.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r5.w, r5.w, r19.y
                
                #line 173
                  if_z r5.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r5.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r6.x, l(0.000000), r5.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r7.w, r13.xyzx, r20.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r16.xyz, r7.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r16.xyzx, r21.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r12.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r7.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r6.xxxx, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r6.xxxx, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r5.w, r13.xyzx, r17.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r4.w, r4.w, r5.w
                    exp r4.w, r4.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r5.w, r18.xyzx, r19.xyzx
                    div r5.w, r4.w, r5.w  // att<0:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r5.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r5.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r4.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r4.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 378 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[27], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r3.w, l(0), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r4.w, l(0.000000), r3.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r5.w, r7.xyzx, r11.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r10.xyz, r5.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r7.xyzx, r12.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r6.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r5.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r4.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r4.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r1.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(1), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r7.w, r13.xyzx, r17.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r16.xyz, r7.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r13.xyzx, r18.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r12.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r7.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r6.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(2), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r7.w, r12.xyzx, r16.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r15.xyz, r7.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r12.xyzx, r17.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r11.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r3.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r7.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r3.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r7.w, r3.w  // i<0>
                loop 
                  ilt r8.w, r7.w, cb0[901].x
                  breakc_z r8.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r8.w, r7.w, l(5)
                  mov r12.xyz, cb0[r8.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r8.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r8.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r8.w + 404].xyzx  // L<12,13,14>
                  mov r9.w, cb0[r8.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r8.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r8.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r8.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r8.w, r9.w, r17.y
                
                #line 121
                  if_z r8.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r8.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r9.w, l(0.000000), r8.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r10.w, r12.xyzx, r18.xyzx
                    add r10.w, r10.w, r10.w
                    mov r10.w, -r10.w
                    mul r15.xyz, r10.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r10.w, r12.xyzx, r19.xyzx
                    max r10.w, r10.w, l(0.000000)
                    log r10.w, r10.w
                    mul r10.w, r10.w, r11.w
                    exp r10.w, r10.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r10.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r9.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r9.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r8.w, r16.xyzx, r17.xyzx
                    div r8.w, l(1.000000), r8.w  // att<0:NaN:Inf>
                    mul r10.xyz, r8.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r8.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.w, r7.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r8.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r7.w, r7.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r3.w  // i<0>
                loop 
                  ilt r4.w, r3.y, cb0[1502].x
                  breakc_z r4.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r4.w, r3.y, l(6)
                  mov r13.xyz, cb0[r4.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r4.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r4.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r4.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r4.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r4.w + 907].xyzx  // L<20,21,22>
                  mov r5.w, cb0[r4.w + 905].w  // L<15>
                  mov r4.w, cb0[r4.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r6.x, r16.xyzx, r16.xyzx
                  sqrt r19.y, r6.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r5.w, r5.w, r19.y
                
                #line 173
                  if_z r5.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r5.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r6.x, l(0.000000), r5.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r7.w, r13.xyzx, r20.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r16.xyz, r7.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r16.xyzx, r21.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r12.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r7.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r6.xxxx, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r6.xxxx, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r5.w, r13.xyzx, r17.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r4.w, r4.w, r5.w
                    exp r4.w, r4.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r5.w, r18.xyzx, r19.xyzx
                    div r5.w, r4.w, r5.w  // att<0:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r5.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r5.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r4.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r4.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r0.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r9.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 378 instruction slots used
                            
            };
        }

    }

    technique11 Light1Reflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gSsaoMap                          texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 155
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 258
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r2.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r3.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r3.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r3.w, r6.xyzx, r10.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r9.xyz, r3.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r6.xyzx, r11.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r5.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r1.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r2.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r3.xyz, r0.wwww, r3.xyzx
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:NaN:Inf>
                mov r6.y, r3.y  // ambient<1:NaN:Inf>
                mov r6.z, r3.z  // ambient<2:NaN:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r5.w, r12.xyzx, r16.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r15.xyz, r5.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r12.xyzx, r17.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r11.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r5.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r7.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r5.w, r11.xyzx, r15.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r14.xyz, r5.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r11.xyzx, r16.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r10.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r1.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r5.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r8.xyz, r0.wwww, r8.xyzx
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r2.w, r1.w  // i<0>
                loop 
                  ilt r6.w, r2.w, cb0[901].x
                  breakc_z r6.w
                
                #line 177
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r6.w, r2.w, l(5)
                  mov r11.xyz, cb0[r6.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r6.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r6.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r6.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r6.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r6.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r6.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r6.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r6.w, r7.w, r16.y
                
                #line 121
                  if_z r6.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r6.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r7.w, l(0.000000), r6.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r8.w, r11.xyzx, r17.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r14.xyz, r8.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r11.xyzx, r18.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r10.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r6.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r9.xyz, r7.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r6.w, r15.xyzx, r16.xyzx
                    div r6.w, l(1.000000), r6.w  // att<0:NaN:Inf>
                    mul r9.xyz, r6.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r6.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r8.xyz, r0.wwww, r8.xyzx
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.w, r2.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r6.w + 0].xyzx
                  mul r8.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r2.w, r2.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r1.w  // i<0>
                loop 
                  ilt r2.w, r2.y, cb0[1502].x
                  breakc_z r2.w
                
                #line 188
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r2.y, l(6)
                  mov r12.xyz, cb0[r2.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.w + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r2.w + 905].w  // L<15>
                  mov r2.w, cb0[r2.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r4.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r4.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r3.w, r3.w, r18.y
                
                #line 173
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r3.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r4.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r5.x, r12.xyzx, r19.xyzx
                    add r5.x, r5.x, r5.x
                    mov r5.x, -r5.x
                    mul r15.xyz, r5.xxxx, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.x, r15.xyzx, r20.xyzx
                    max r5.x, r5.x, l(0.000000)
                    log r5.x, r5.x
                    mul r5.x, r5.x, r11.w
                    exp r5.x, r5.x  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.xxxx
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r10.xyz, r4.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r3.w, r12.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r2.w, r2.w, r3.w
                    exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r3.w, r17.xyzx, r18.xyzx
                    div r3.w, r2.w, r3.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r2.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r2.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r2.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r8.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, cb1[25].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 374 instruction slots used
                            
            };
        }

    }

    technique11 Light2Reflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gSsaoMap                          texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 155
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 258
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r2.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r3.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r3.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r3.w, r6.xyzx, r10.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r9.xyz, r3.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r6.xyzx, r11.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r5.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r1.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r2.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r3.xyz, r0.wwww, r3.xyzx
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:NaN:Inf>
                mov r6.y, r3.y  // ambient<1:NaN:Inf>
                mov r6.z, r3.z  // ambient<2:NaN:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r5.w, r12.xyzx, r16.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r15.xyz, r5.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r12.xyzx, r17.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r11.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r5.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r7.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r5.w, r11.xyzx, r15.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r14.xyz, r5.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r11.xyzx, r16.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r10.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r1.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r5.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r8.xyz, r0.wwww, r8.xyzx
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r2.w, r1.w  // i<0>
                loop 
                  ilt r6.w, r2.w, cb0[901].x
                  breakc_z r6.w
                
                #line 177
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r6.w, r2.w, l(5)
                  mov r11.xyz, cb0[r6.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r6.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r6.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r6.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r6.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r6.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r6.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r6.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r6.w, r7.w, r16.y
                
                #line 121
                  if_z r6.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r6.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r7.w, l(0.000000), r6.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r8.w, r11.xyzx, r17.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r14.xyz, r8.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r11.xyzx, r18.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r10.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r6.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r9.xyz, r7.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r6.w, r15.xyzx, r16.xyzx
                    div r6.w, l(1.000000), r6.w  // att<0:NaN:Inf>
                    mul r9.xyz, r6.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r6.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r8.xyz, r0.wwww, r8.xyzx
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.w, r2.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r6.w + 0].xyzx
                  mul r8.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r2.w, r2.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r1.w  // i<0>
                loop 
                  ilt r2.w, r2.y, cb0[1502].x
                  breakc_z r2.w
                
                #line 188
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r2.y, l(6)
                  mov r12.xyz, cb0[r2.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.w + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r2.w + 905].w  // L<15>
                  mov r2.w, cb0[r2.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r4.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r4.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r3.w, r3.w, r18.y
                
                #line 173
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r3.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r4.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r5.x, r12.xyzx, r19.xyzx
                    add r5.x, r5.x, r5.x
                    mov r5.x, -r5.x
                    mul r15.xyz, r5.xxxx, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.x, r15.xyzx, r20.xyzx
                    max r5.x, r5.x, l(0.000000)
                    log r5.x, r5.x
                    mul r5.x, r5.x, r11.w
                    exp r5.x, r5.x  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.xxxx
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r10.xyz, r4.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r3.w, r12.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r2.w, r2.w, r3.w
                    exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r3.w, r17.xyzx, r18.xyzx
                    div r3.w, r2.w, r3.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r2.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r2.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r2.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r8.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, cb1[25].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 374 instruction slots used
                            
            };
        }

    }

    technique11 Light3Reflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gSsaoMap                          texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 155
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 258
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r2.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r3.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r3.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r3.w, r6.xyzx, r10.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r9.xyz, r3.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r6.xyzx, r11.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r5.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r1.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r2.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r3.xyz, r0.wwww, r3.xyzx
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:NaN:Inf>
                mov r6.y, r3.y  // ambient<1:NaN:Inf>
                mov r6.z, r3.z  // ambient<2:NaN:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r5.w, r12.xyzx, r16.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r15.xyz, r5.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r12.xyzx, r17.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r11.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r5.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r2.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r7.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r2.w, l(0.000000), r1.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r5.w, r11.xyzx, r15.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r14.xyz, r5.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r11.xyzx, r16.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r10.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r1.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r5.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r8.xyz, r0.wwww, r8.xyzx
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r2.w, r1.w  // i<0>
                loop 
                  ilt r6.w, r2.w, cb0[901].x
                  breakc_z r6.w
                
                #line 177
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r6.w, r2.w, l(5)
                  mov r11.xyz, cb0[r6.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r6.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r6.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r6.w + 404].xyzx  // L<12,13,14>
                  mov r7.w, cb0[r6.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r6.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r6.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r6.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r6.w, r7.w, r16.y
                
                #line 121
                  if_z r6.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r6.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r7.w, l(0.000000), r6.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r8.w, r11.xyzx, r17.xyzx
                    add r8.w, r8.w, r8.w
                    mov r8.w, -r8.w
                    mul r14.xyz, r8.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r8.w, r11.xyzx, r18.xyzx
                    max r8.w, r8.w, l(0.000000)
                    log r8.w, r8.w
                    mul r8.w, r8.w, r10.w
                    exp r8.w, r8.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r6.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r9.xyz, r7.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r6.w, r15.xyzx, r16.xyzx
                    div r6.w, l(1.000000), r6.w  // att<0:NaN:Inf>
                    mul r9.xyz, r6.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r6.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r8.xyz, r0.wwww, r8.xyzx
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.w, r2.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r6.w + 0].xyzx
                  mul r8.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r2.w, r2.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r1.w  // i<0>
                loop 
                  ilt r2.w, r2.y, cb0[1502].x
                  breakc_z r2.w
                
                #line 188
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r2.w, r2.y, l(6)
                  mov r12.xyz, cb0[r2.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r2.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r2.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r2.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r2.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r2.w + 907].xyzx  // L<20,21,22>
                  mov r3.w, cb0[r2.w + 905].w  // L<15>
                  mov r2.w, cb0[r2.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r4.w, r15.xyzx, r15.xyzx
                  sqrt r18.y, r4.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r3.w, r3.w, r18.y
                
                #line 173
                  if_z r3.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r3.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r4.w, l(0.000000), r3.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r5.x, r12.xyzx, r19.xyzx
                    add r5.x, r5.x, r5.x
                    mov r5.x, -r5.x
                    mul r15.xyz, r5.xxxx, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r5.x, r15.xyzx, r20.xyzx
                    max r5.x, r5.x, l(0.000000)
                    log r5.x, r5.x
                    mul r5.x, r5.x, r11.w
                    exp r5.x, r5.x  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r3.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.xxxx
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r10.xyz, r4.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r4.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r3.w, r12.xyzx, r16.xyzx
                    max r3.w, r3.w, l(0.000000)
                    log r3.w, r3.w
                    mul r2.w, r2.w, r3.w
                    exp r2.w, r2.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r3.w, r17.xyzx, r18.xyzx
                    div r3.w, r2.w, r3.w  // att<0:NaN:Inf>
                    mul r9.xyz, r2.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r3.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r2.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r2.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r2.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r8.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, cb1[25].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 374 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[26], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 130 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 145
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 222
                mul r0.w, r0.w, cb0[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 6 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // gCubeMap                          texture  float4        cube    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texturecube (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r0.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r17.y
                
                #line 121
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r19.y
                
                #line 173
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t3.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 375 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // gCubeMap                          texture  float4        cube    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texturecube (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r0.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r17.y
                
                #line 121
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r19.y
                
                #line 173
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t3.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 375 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // gCubeMap                          texture  float4        cube    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texturecube (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r0.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r17.y
                
                #line 121
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r19.y
                
                #line 173
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t3.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 375 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[26], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 130 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r1.x, r0.w, l(-0.100000)
                lt r1.x, r1.x, l(0.000000)
                and r1.x, r1.x, l(-1)
                discard r1.x
                
                #line 145
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 222
                mul r0.w, r0.w, cb0[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 10 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // gCubeMap                          texture  float4        cube    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texturecube (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r0.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r17.y
                
                #line 121
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r19.y
                
                #line 173
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t3.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 379 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // gCubeMap                          texture  float4        cube    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texturecube (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r0.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r17.y
                
                #line 121
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r19.y
                
                #line 173
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t3.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 379 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4 [unused]
                //   float gFogRange;                   // Offset: 24052 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset: 24064 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // gCubeMap                          texture  float4        cube    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1503], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texturecube (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r0.w, r0.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r1.w, l(0), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r4.w, r7.xyzx, r11.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r10.xyz, r4.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r7.xyzx, r12.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r6.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r1.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r4.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r0.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(1), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r6.w, r13.xyzx, r17.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r16.xyz, r6.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r13.xyzx, r18.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r12.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r1.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r6.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r3.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r1.w, l(2), cb0[400].x
                if_nz r1.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r1.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r1.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r1.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r1.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r3.w, r1.w  // i<0>
                loop 
                  ilt r7.w, r3.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r3.w, l(5)
                  mov r12.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r17.y
                
                #line 121
                  if_z r7.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r9.w, r12.xyzx, r18.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r15.xyz, r9.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r12.xyzx, r19.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r11.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r7.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r9.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r8.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r7.w, r16.xyzx, r17.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r7.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r0.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r3.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r7.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r1.w  // i<0>
                loop 
                  ilt r3.w, r3.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r3.y, l(6)
                  mov r13.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.w, r16.xyzx, r16.xyzx
                  sqrt r19.y, r5.w  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r19.y
                
                #line 173
                  if_z r4.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.w, l(0.000000), r4.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r6.x, r13.xyzx, r20.xyzx
                    add r6.x, r6.x, r6.x
                    mov r6.x, -r6.x
                    mul r16.xyz, r6.xxxx, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.x, r16.xyzx, r21.xyzx
                    max r6.x, r6.x, l(0.000000)
                    log r6.x, r6.x
                    mul r6.x, r6.x, r12.w
                    exp r6.x, r6.x  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r4.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r6.xxxx
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r5.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r13.xyzx, r17.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r4.w, r18.xyzx, r19.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r10.xyz, r3.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r4.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r0.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r3.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t3.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 379 instruction slots used
                            
            };
        }

    }

    technique11 Light1FogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gSsaoMap                          texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 155
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 258
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r2.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r3.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r2.w, l(0), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r3.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r2.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r4.w, r6.xyzx, r10.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r9.xyz, r4.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r6.xyzx, r11.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r5.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r2.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r4.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r4.xyz, r3.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r3.xyz, r1.wwww, r3.xyzx
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:NaN:Inf>
                mov r6.y, r3.y  // ambient<1:NaN:Inf>
                mov r6.z, r3.z  // ambient<2:NaN:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r2.w, l(1), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r5.w, l(0.000000), r2.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r2.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r5.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r7.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r2.w, l(2), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r5.w, l(0.000000), r2.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r6.w, r11.xyzx, r15.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r14.xyz, r6.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r11.xyzx, r16.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r10.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r2.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r6.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r9.xyz, r5.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r5.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r8.xyz, r1.wwww, r8.xyzx
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r2.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r6.w, r2.w  // i<0>
                loop 
                  ilt r7.w, r6.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r6.w, l(5)
                  mov r11.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r16.y
                
                #line 121
                  if_z r7.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r9.w, r11.xyzx, r17.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r14.xyz, r9.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r11.xyzx, r18.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r10.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r7.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r9.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r9.xyz, r8.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r7.w, r15.xyzx, r16.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r9.xyz, r7.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r8.xyz, r1.wwww, r8.xyzx
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r6.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r7.w + 0].xyzx
                  mul r8.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r6.w, r6.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r2.w  // i<0>
                loop 
                  ilt r3.w, r2.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r2.y, l(6)
                  mov r12.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.x, r15.xyzx, r15.xyzx
                  sqrt r18.y, r5.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r18.y
                
                #line 173
                  if_z r4.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.x, l(0.000000), r4.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r6.w, r12.xyzx, r19.xyzx
                    add r6.w, r6.w, r6.w
                    mov r6.w, -r6.w
                    mul r15.xyz, r6.wwww, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.w, r15.xyzx, r20.xyzx
                    max r6.w, r6.w, l(0.000000)
                    log r6.w, r6.w
                    mul r6.w, r6.w, r11.w
                    exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r4.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r6.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r10.xyz, r5.xxxx, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r5.xxxx, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r12.xyzx, r16.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r4.w, r17.xyzx, r18.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r9.xyz, r3.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r3.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r2.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r8.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, cb1[25].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 383 instruction slots used
                            
            };
        }

    }

    technique11 Light2FogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gSsaoMap                          texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 155
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 258
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r2.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r3.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r2.w, l(0), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r3.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r2.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r4.w, r6.xyzx, r10.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r9.xyz, r4.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r6.xyzx, r11.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r5.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r2.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r4.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r4.xyz, r3.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r3.xyz, r1.wwww, r3.xyzx
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:NaN:Inf>
                mov r6.y, r3.y  // ambient<1:NaN:Inf>
                mov r6.z, r3.z  // ambient<2:NaN:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r2.w, l(1), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r5.w, l(0.000000), r2.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r2.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r5.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r7.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r2.w, l(2), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r5.w, l(0.000000), r2.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r6.w, r11.xyzx, r15.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r14.xyz, r6.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r11.xyzx, r16.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r10.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r2.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r6.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r9.xyz, r5.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r5.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r8.xyz, r1.wwww, r8.xyzx
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r2.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r6.w, r2.w  // i<0>
                loop 
                  ilt r7.w, r6.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r6.w, l(5)
                  mov r11.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r16.y
                
                #line 121
                  if_z r7.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r9.w, r11.xyzx, r17.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r14.xyz, r9.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r11.xyzx, r18.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r10.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r7.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r9.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r9.xyz, r8.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r7.w, r15.xyzx, r16.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r9.xyz, r7.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r8.xyz, r1.wwww, r8.xyzx
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r6.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r7.w + 0].xyzx
                  mul r8.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r6.w, r6.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r2.w  // i<0>
                loop 
                  ilt r3.w, r2.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r2.y, l(6)
                  mov r12.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.x, r15.xyzx, r15.xyzx
                  sqrt r18.y, r5.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r18.y
                
                #line 173
                  if_z r4.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.x, l(0.000000), r4.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r6.w, r12.xyzx, r19.xyzx
                    add r6.w, r6.w, r6.w
                    mov r6.w, -r6.w
                    mul r15.xyz, r6.wwww, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.w, r15.xyzx, r20.xyzx
                    max r6.w, r6.w, l(0.000000)
                    log r6.w, r6.w
                    mul r6.w, r6.w, r11.w
                    exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r4.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r6.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r10.xyz, r5.xxxx, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r5.xxxx, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r12.xyzx, r16.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r4.w, r17.xyzx, r18.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r9.xyz, r3.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r3.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r2.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r8.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, cb1[25].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 383 instruction slots used
                            
            };
        }

    }

    technique11 Light3FogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gSsaoMap                          texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 21
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 155
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 258
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r2.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r3.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r2.w, l(0), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r3.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r4.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r5.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r10.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r9.xyzx, r10.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r3.w, l(0.000000), r2.w
                  mov r6.xyz, -r9.xyzx
                  dp3 r4.w, r6.xyzx, r10.xyzx
                  add r4.w, r4.w, r4.w
                  mov r4.w, -r4.w
                  mul r9.xyz, r4.wwww, r10.xyzx
                  add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r4.w, r6.xyzx, r11.xyzx
                  max r4.w, r4.w, l(0.000000)
                  log r4.w, r4.w
                  mul r4.w, r4.w, r5.w
                  exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                  mul r4.xyz, r4.xyzx, r2.wwww
                  mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r4.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r4.xyz, r3.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r3.xyz, r1.wwww, r3.xyzx
                  add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r4.xyz, r2.xxxx, r4.xyzx
                  add r4.xyz, r4.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r5.xyz, r2.xxxx, r5.xyzx
                  add r5.xyz, r5.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r3.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r4.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r4.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r5.x, l(0)  // spec<2: 0f>
                endif 
                mov r6.x, r3.x  // ambient<0:NaN:Inf>
                mov r6.y, r3.y  // ambient<1:NaN:Inf>
                mov r6.z, r3.z  // ambient<2:NaN:Inf>
                mov r7.x, r3.w  // diffuse<0:NaN:Inf>
                mov r7.y, r4.x  // diffuse<1:NaN:Inf>
                mov r7.z, r4.y  // diffuse<2:NaN:Inf>
                mov r8.x, r4.z  // spec<0:NaN:Inf>
                mov r8.y, r4.w  // spec<1:NaN:Inf>
                mov r8.z, r5.x  // spec<2:NaN:Inf>
                ilt r2.w, l(1), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r5.w, l(0.000000), r2.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r6.w, r12.xyzx, r16.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r15.xyz, r6.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r12.xyzx, r17.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r11.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r2.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r6.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r5.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r5.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r3.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r7.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z
                  mov r3.xyzw, r3.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.y, r4.x  // diffuse<1:NaN:Inf>
                mov r6.z, r4.y  // diffuse<2:NaN:Inf>
                mov r7.x, r4.z  // spec<0:NaN:Inf>
                mov r7.y, r4.w  // spec<1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                ilt r2.w, l(2), cb0[400].x
                if_nz r2.w
                
                #line 166
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r11.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r15.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r16.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r14.xyz, -r14.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r2.w, r14.xyzx, r15.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r5.w, l(0.000000), r2.w
                  mov r11.xyz, -r14.xyzx
                  dp3 r6.w, r11.xyzx, r15.xyzx
                  add r6.w, r6.w, r6.w
                  mov r6.w, -r6.w
                  mul r14.xyz, r6.wwww, r15.xyzx
                  add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r6.w, r11.xyzx, r16.xyzx
                  max r6.w, r6.w, l(0.000000)
                  log r6.w, r6.w
                  mul r6.w, r6.w, r10.w
                  exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r9.xyzx, r2.wwww
                  mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r6.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r9.xyz, r5.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r5.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r8.xyz, r1.wwww, r8.xyzx
                  add r3.xyz, r3.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r4.xyz, r6.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r6.zxyz, r7.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r3.w, r4.z  // diffuse<0:NaN:Inf>
                  mov r4.zw, r5.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r2.w, l(0)  // i<0: 0>
                mov r5.yzw, r3.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r6.x, r3.w  // diffuse<0:NaN:Inf>
                mov r6.yz, r4.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r7.xy, r4.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r7.z, r5.x  // spec<2:NaN:Inf>
                mov r6.w, r2.w  // i<0>
                loop 
                  ilt r7.w, r6.w, cb0[901].x
                  breakc_z r7.w
                
                #line 177
                  nop 
                  mov r8.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r9.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r10.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r7.w, r6.w, l(5)
                  mov r11.xyz, cb0[r7.w + 401].xyzx  // L<0,1,2>
                  mov r12.xyz, cb0[r7.w + 402].xyzx  // L<4,5,6>
                  mov r13.xyz, cb0[r7.w + 403].xyzx  // L<8,9,10>
                  mov r14.xyz, cb0[r7.w + 404].xyzx  // L<12,13,14>
                  mov r8.w, cb0[r7.w + 404].w  // L<15>
                  mov r15.xyz, cb0[r7.w + 405].xyzx  // L<16,17,18>
                  mov r16.xyz, v1.xyzx  // pos<0,1,2>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx
                  add r14.xyz, r14.xyzx, r16.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r7.w, r14.xyzx, r14.xyzx
                  sqrt r16.y, r7.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r7.w, r8.w, r16.y
                
                #line 121
                  if_z r7.w
                    div r14.xyz, r14.xyzx, r16.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r7.w, r14.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r8.w, l(0.000000), r7.w
                    mov r11.xyz, -r14.xyzx
                    dp3 r9.w, r11.xyzx, r17.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r14.xyz, r9.wwww, r17.xyzx
                    add r11.xyz, r11.xyzx, r14.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r11.xyzx, r18.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r10.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r9.xyz, r9.xyzx, r7.wwww
                    mul r9.xyz, r12.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r9.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r9.xyz, r8.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r16.z, r16.y, r16.y
                    mov r16.x, l(1.000000)
                    dp3 r7.w, r15.xyzx, r16.xyzx
                    div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                    mul r9.xyz, r7.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r7.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r8.xyz, r1.wwww, r8.xyzx
                  add r5.yzw, r5.yyzw, r8.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r7.w, r6.w
                  mov r2.y, l(1.000000)
                  dp3 r2.y, r2.xyyx, icb[r7.w + 0].xyzx
                  mul r8.xyz, r9.xyzx, r2.yyyy
                  add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r10.xyzx, r2.yyyy
                  add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r6.w, r6.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r3.xyz, r5.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.y, r2.w  // i<0>
                loop 
                  ilt r3.w, r2.y, cb0[1502].x
                  breakc_z r3.w
                
                #line 188
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r3.w, r2.y, l(6)
                  mov r12.xyz, cb0[r3.w + 902].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r3.w + 903].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r3.w + 904].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r3.w + 905].xyzx  // L<12,13,14>
                  mov r16.xyz, cb0[r3.w + 906].xyzx  // L<16,17,18>
                  mov r17.xyz, cb0[r3.w + 907].xyzx  // L<20,21,22>
                  mov r4.w, cb0[r3.w + 905].w  // L<15>
                  mov r3.w, cb0[r3.w + 906].w  // L<19>
                  mov r18.xyz, v1.xyzx  // pos<0,1,2>
                  mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r18.xyz, -r18.xyzx
                  add r15.xyz, r15.xyzx, r18.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r5.x, r15.xyzx, r15.xyzx
                  sqrt r18.y, r5.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r4.w, r4.w, r18.y
                
                #line 173
                  if_z r4.w
                    div r15.xyz, r15.xyzx, r18.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r4.w, r15.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r5.x, l(0.000000), r4.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r6.w, r12.xyzx, r19.xyzx
                    add r6.w, r6.w, r6.w
                    mov r6.w, -r6.w
                    mul r15.xyz, r6.wwww, r19.xyzx
                    add r15.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r6.w, r15.xyzx, r20.xyzx
                    max r6.w, r6.w, l(0.000000)
                    log r6.w, r6.w
                    mul r6.w, r6.w, r11.w
                    exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r4.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r6.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r10.xyz, r5.xxxx, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r5.xxxx, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r4.w, r12.xyzx, r16.xyzx
                    max r4.w, r4.w, l(0.000000)
                    log r4.w, r4.w
                    mul r3.w, r3.w, r4.w
                    exp r3.w, r3.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r18.z, r18.y, r18.y
                    mov r18.x, l(1.000000)
                    dp3 r4.w, r17.xyzx, r18.xyzx
                    div r4.w, r3.w, r4.w  // att<0:NaN:Inf>
                    mul r9.xyz, r3.wwww, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r4.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r3.w, r2.y
                  mov r2.z, l(1.000000)
                  dp3 r2.z, r2.xzzx, icb[r3.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r2.zzzz
                  add r4.xyz, r4.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r2.zzzz
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r2.y, r2.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r2.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r8.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, cb1[25].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 383 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400 [unused]
                //   int dirLight_size;                 // Offset: 6400 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000 [unused]
                //   int pointLight_size;               // Offset: 14416 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600 [unused]
                //   int spotLight_size;                // Offset: 24032 Size:     4 [unused]
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[1505], immediateIndexed
                dcl_constantbuffer cb1[26], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 116 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, -v1.xyzx
                add r0.xyz, r0.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 145
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 215
                mov r0.y, -cb0[1503].x
                add r0.x, r0.y, r0.x
                div r0.x, r0.x, cb0[1503].y
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[1504].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r1.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 19 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // gCubeMap                          texture  float4        cube    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texturecube (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r3.w, l(0), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r4.w, l(0.000000), r3.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r5.w, r7.xyzx, r11.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r10.xyz, r5.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r7.xyzx, r12.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r6.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r5.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r4.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r4.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r1.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(1), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r7.w, r13.xyzx, r17.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r16.xyz, r7.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r13.xyzx, r18.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r12.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r7.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r6.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(2), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r7.w, r12.xyzx, r16.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r15.xyz, r7.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r12.xyzx, r17.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r11.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r3.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r7.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r3.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r7.w, r3.w  // i<0>
                loop 
                  ilt r8.w, r7.w, cb0[901].x
                  breakc_z r8.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r8.w, r7.w, l(5)
                  mov r12.xyz, cb0[r8.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r8.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r8.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r8.w + 404].xyzx  // L<12,13,14>
                  mov r9.w, cb0[r8.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r8.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r8.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r8.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r8.w, r9.w, r17.y
                
                #line 121
                  if_z r8.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r8.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r9.w, l(0.000000), r8.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r10.w, r12.xyzx, r18.xyzx
                    add r10.w, r10.w, r10.w
                    mov r10.w, -r10.w
                    mul r15.xyz, r10.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r10.w, r12.xyzx, r19.xyzx
                    max r10.w, r10.w, l(0.000000)
                    log r10.w, r10.w
                    mul r10.w, r10.w, r11.w
                    exp r10.w, r10.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r10.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r9.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r9.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r8.w, r16.xyzx, r17.xyzx
                    div r8.w, l(1.000000), r8.w  // att<0:NaN:Inf>
                    mul r10.xyz, r8.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r8.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.w, r7.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r8.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r7.w, r7.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r3.w  // i<0>
                loop 
                  ilt r4.w, r3.y, cb0[1502].x
                  breakc_z r4.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r4.w, r3.y, l(6)
                  mov r13.xyz, cb0[r4.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r4.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r4.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r4.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r4.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r4.w + 907].xyzx  // L<20,21,22>
                  mov r5.w, cb0[r4.w + 905].w  // L<15>
                  mov r4.w, cb0[r4.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r6.x, r16.xyzx, r16.xyzx
                  sqrt r19.y, r6.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r5.w, r5.w, r19.y
                
                #line 173
                  if_z r5.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r5.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r6.x, l(0.000000), r5.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r7.w, r13.xyzx, r20.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r16.xyz, r7.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r16.xyzx, r21.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r12.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r7.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r6.xxxx, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r6.xxxx, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r5.w, r13.xyzx, r17.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r4.w, r4.w, r5.w
                    exp r4.w, r4.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r5.w, r18.xyzx, r19.xyzx
                    div r5.w, r4.w, r5.w  // att<0:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r5.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r5.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r4.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r4.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t3.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 384 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // gCubeMap                          texture  float4        cube    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texturecube (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r3.w, l(0), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r4.w, l(0.000000), r3.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r5.w, r7.xyzx, r11.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r10.xyz, r5.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r7.xyzx, r12.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r6.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r5.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r4.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r4.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r1.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(1), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r7.w, r13.xyzx, r17.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r16.xyz, r7.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r13.xyzx, r18.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r12.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r7.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r6.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(2), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r7.w, r12.xyzx, r16.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r15.xyz, r7.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r12.xyzx, r17.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r11.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r3.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r7.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r3.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r7.w, r3.w  // i<0>
                loop 
                  ilt r8.w, r7.w, cb0[901].x
                  breakc_z r8.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r8.w, r7.w, l(5)
                  mov r12.xyz, cb0[r8.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r8.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r8.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r8.w + 404].xyzx  // L<12,13,14>
                  mov r9.w, cb0[r8.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r8.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r8.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r8.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r8.w, r9.w, r17.y
                
                #line 121
                  if_z r8.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r8.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r9.w, l(0.000000), r8.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r10.w, r12.xyzx, r18.xyzx
                    add r10.w, r10.w, r10.w
                    mov r10.w, -r10.w
                    mul r15.xyz, r10.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r10.w, r12.xyzx, r19.xyzx
                    max r10.w, r10.w, l(0.000000)
                    log r10.w, r10.w
                    mul r10.w, r10.w, r11.w
                    exp r10.w, r10.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r10.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r9.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r9.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r8.w, r16.xyzx, r17.xyzx
                    div r8.w, l(1.000000), r8.w  // att<0:NaN:Inf>
                    mul r10.xyz, r8.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r8.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.w, r7.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r8.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r7.w, r7.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r3.w  // i<0>
                loop 
                  ilt r4.w, r3.y, cb0[1502].x
                  breakc_z r4.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r4.w, r3.y, l(6)
                  mov r13.xyz, cb0[r4.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r4.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r4.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r4.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r4.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r4.w + 907].xyzx  // L<20,21,22>
                  mov r5.w, cb0[r4.w + 905].w  // L<15>
                  mov r4.w, cb0[r4.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r6.x, r16.xyzx, r16.xyzx
                  sqrt r19.y, r6.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r5.w, r5.w, r19.y
                
                #line 173
                  if_z r5.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r5.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r6.x, l(0.000000), r5.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r7.w, r13.xyzx, r20.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r16.xyz, r7.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r16.xyzx, r21.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r12.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r7.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r6.xxxx, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r6.xxxx, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r5.w, r13.xyzx, r17.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r4.w, r4.w, r5.w
                    exp r4.w, r4.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r5.w, r18.xyzx, r19.xyzx
                    div r5.w, r4.w, r5.w  // att<0:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r5.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r5.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r4.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r4.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t3.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 384 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // gCubeMap                          texture  float4        cube    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texturecube (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r3.w, l(0), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r4.w, l(0.000000), r3.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r5.w, r7.xyzx, r11.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r10.xyz, r5.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r7.xyzx, r12.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r6.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r5.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r4.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r4.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r1.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(1), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r7.w, r13.xyzx, r17.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r16.xyz, r7.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r13.xyzx, r18.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r12.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r7.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r6.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(2), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r7.w, r12.xyzx, r16.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r15.xyz, r7.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r12.xyzx, r17.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r11.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r3.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r7.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r3.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r7.w, r3.w  // i<0>
                loop 
                  ilt r8.w, r7.w, cb0[901].x
                  breakc_z r8.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r8.w, r7.w, l(5)
                  mov r12.xyz, cb0[r8.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r8.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r8.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r8.w + 404].xyzx  // L<12,13,14>
                  mov r9.w, cb0[r8.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r8.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r8.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r8.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r8.w, r9.w, r17.y
                
                #line 121
                  if_z r8.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r8.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r9.w, l(0.000000), r8.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r10.w, r12.xyzx, r18.xyzx
                    add r10.w, r10.w, r10.w
                    mov r10.w, -r10.w
                    mul r15.xyz, r10.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r10.w, r12.xyzx, r19.xyzx
                    max r10.w, r10.w, l(0.000000)
                    log r10.w, r10.w
                    mul r10.w, r10.w, r11.w
                    exp r10.w, r10.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r10.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r9.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r9.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r8.w, r16.xyzx, r17.xyzx
                    div r8.w, l(1.000000), r8.w  // att<0:NaN:Inf>
                    mul r10.xyz, r8.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r8.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.w, r7.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r8.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r7.w, r7.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r3.w  // i<0>
                loop 
                  ilt r4.w, r3.y, cb0[1502].x
                  breakc_z r4.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r4.w, r3.y, l(6)
                  mov r13.xyz, cb0[r4.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r4.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r4.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r4.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r4.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r4.w + 907].xyzx  // L<20,21,22>
                  mov r5.w, cb0[r4.w + 905].w  // L<15>
                  mov r4.w, cb0[r4.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r6.x, r16.xyzx, r16.xyzx
                  sqrt r19.y, r6.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r5.w, r5.w, r19.y
                
                #line 173
                  if_z r5.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r5.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r6.x, l(0.000000), r5.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r7.w, r13.xyzx, r20.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r16.xyz, r7.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r16.xyzx, r21.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r12.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r7.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r6.xxxx, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r6.xxxx, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r5.w, r13.xyzx, r17.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r4.w, r4.w, r5.w
                    exp r4.w, r4.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r5.w, r18.xyzx, r19.xyzx
                    div r5.w, r4.w, r5.w  // att<0:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r5.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r5.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r4.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r4.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t3.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 384 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400 [unused]
                //   int dirLight_size;                 // Offset: 6400 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000 [unused]
                //   int pointLight_size;               // Offset: 14416 Size:     4 [unused]
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600 [unused]
                //   int spotLight_size;                // Offset: 24032 Size:     4 [unused]
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                // TEXCOORD                 2   xyzw        5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[1505], immediateIndexed
                dcl_constantbuffer cb1[26], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 116 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, -v1.xyzx
                add r0.xyz, r0.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r0.y, r1.w, l(-0.100000)
                lt r0.y, r0.y, l(0.000000)
                and r0.y, r0.y, l(-1)
                discard r0.y
                
                #line 145
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 215
                mov r0.y, -cb0[1503].x
                add r0.x, r0.y, r0.x
                div r0.x, r0.x, cb0[1503].y
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[1504].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r1.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 23 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // gCubeMap                          texture  float4        cube    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texturecube (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r3.w, l(0), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r4.w, l(0.000000), r3.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r5.w, r7.xyzx, r11.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r10.xyz, r5.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r7.xyzx, r12.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r6.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r5.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r4.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r4.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r1.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(1), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r7.w, r13.xyzx, r17.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r16.xyz, r7.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r13.xyzx, r18.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r12.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r7.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r6.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(2), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r7.w, r12.xyzx, r16.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r15.xyz, r7.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r12.xyzx, r17.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r11.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r3.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r7.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r3.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r7.w, r3.w  // i<0>
                loop 
                  ilt r8.w, r7.w, cb0[901].x
                  breakc_z r8.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r8.w, r7.w, l(5)
                  mov r12.xyz, cb0[r8.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r8.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r8.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r8.w + 404].xyzx  // L<12,13,14>
                  mov r9.w, cb0[r8.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r8.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r8.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r8.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r8.w, r9.w, r17.y
                
                #line 121
                  if_z r8.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r8.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r9.w, l(0.000000), r8.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r10.w, r12.xyzx, r18.xyzx
                    add r10.w, r10.w, r10.w
                    mov r10.w, -r10.w
                    mul r15.xyz, r10.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r10.w, r12.xyzx, r19.xyzx
                    max r10.w, r10.w, l(0.000000)
                    log r10.w, r10.w
                    mul r10.w, r10.w, r11.w
                    exp r10.w, r10.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r10.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r9.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r9.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r8.w, r16.xyzx, r17.xyzx
                    div r8.w, l(1.000000), r8.w  // att<0:NaN:Inf>
                    mul r10.xyz, r8.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r8.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.w, r7.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r8.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r7.w, r7.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r3.w  // i<0>
                loop 
                  ilt r4.w, r3.y, cb0[1502].x
                  breakc_z r4.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r4.w, r3.y, l(6)
                  mov r13.xyz, cb0[r4.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r4.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r4.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r4.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r4.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r4.w + 907].xyzx  // L<20,21,22>
                  mov r5.w, cb0[r4.w + 905].w  // L<15>
                  mov r4.w, cb0[r4.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r6.x, r16.xyzx, r16.xyzx
                  sqrt r19.y, r6.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r5.w, r5.w, r19.y
                
                #line 173
                  if_z r5.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r5.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r6.x, l(0.000000), r5.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r7.w, r13.xyzx, r20.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r16.xyz, r7.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r16.xyzx, r21.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r12.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r7.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r6.xxxx, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r6.xxxx, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r5.w, r13.xyzx, r17.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r4.w, r4.w, r5.w
                    exp r4.w, r4.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r5.w, r18.xyzx, r19.xyzx
                    div r5.w, r4.w, r5.w  // att<0:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r5.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r5.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r4.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r4.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t3.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 388 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // gCubeMap                          texture  float4        cube    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texturecube (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r3.w, l(0), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r4.w, l(0.000000), r3.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r5.w, r7.xyzx, r11.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r10.xyz, r5.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r7.xyzx, r12.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r6.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r5.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r4.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r4.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r1.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(1), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r7.w, r13.xyzx, r17.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r16.xyz, r7.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r13.xyzx, r18.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r12.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r7.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r6.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(2), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r7.w, r12.xyzx, r16.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r15.xyz, r7.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r12.xyzx, r17.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r11.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r3.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r7.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r3.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r7.w, r3.w  // i<0>
                loop 
                  ilt r8.w, r7.w, cb0[901].x
                  breakc_z r8.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r8.w, r7.w, l(5)
                  mov r12.xyz, cb0[r8.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r8.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r8.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r8.w + 404].xyzx  // L<12,13,14>
                  mov r9.w, cb0[r8.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r8.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r8.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r8.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r8.w, r9.w, r17.y
                
                #line 121
                  if_z r8.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r8.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r9.w, l(0.000000), r8.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r10.w, r12.xyzx, r18.xyzx
                    add r10.w, r10.w, r10.w
                    mov r10.w, -r10.w
                    mul r15.xyz, r10.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r10.w, r12.xyzx, r19.xyzx
                    max r10.w, r10.w, l(0.000000)
                    log r10.w, r10.w
                    mul r10.w, r10.w, r11.w
                    exp r10.w, r10.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r10.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r9.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r9.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r8.w, r16.xyzx, r17.xyzx
                    div r8.w, l(1.000000), r8.w  // att<0:NaN:Inf>
                    mul r10.xyz, r8.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r8.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.w, r7.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r8.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r7.w, r7.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r3.w  // i<0>
                loop 
                  ilt r4.w, r3.y, cb0[1502].x
                  breakc_z r4.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r4.w, r3.y, l(6)
                  mov r13.xyz, cb0[r4.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r4.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r4.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r4.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r4.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r4.w + 907].xyzx  // L<20,21,22>
                  mov r5.w, cb0[r4.w + 905].w  // L<15>
                  mov r4.w, cb0[r4.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r6.x, r16.xyzx, r16.xyzx
                  sqrt r19.y, r6.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r5.w, r5.w, r19.y
                
                #line 173
                  if_z r5.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r5.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r6.x, l(0.000000), r5.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r7.w, r13.xyzx, r20.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r16.xyz, r7.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r16.xyzx, r21.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r12.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r7.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r6.xxxx, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r6.xxxx, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r5.w, r13.xyzx, r17.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r4.w, r4.w, r5.w
                    exp r4.w, r4.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r5.w, r18.xyzx, r19.xyzx
                    div r5.w, r4.w, r5.w  // att<0:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r5.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r5.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r4.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r4.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t3.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 388 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[24], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 87 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 91
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 94
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                
                #line 97
                dp4 r4.x, r0.xyzw, cb0[20].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[21].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[22].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[23].xyzw  // vout<15:NaN:Inf>
                
                #line 100
                dp4 r6.x, r0.xyzw, cb0[12].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[13].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[14].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[15].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 31 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[100];                 // Offset:    0 Size:  6400
                //   int dirLight_size;                 // Offset: 6400 Size:     4
                //      = 0x00000000 
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 6416
                //       float4 Diffuse;                // Offset: 6432
                //       float4 Specular;               // Offset: 6448
                //       float3 Position;               // Offset: 6464
                //       float Range;                   // Offset: 6476
                //       float3 Att;                    // Offset: 6480
                //       float pad;                     // Offset: 6492
                //
                //   } gPointLights[100];               // Offset: 6416 Size:  8000
                //   int pointLight_size;               // Offset: 14416 Size:     4
                //      = 0x00000000 
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset: 14432
                //       float4 Diffuse;                // Offset: 14448
                //       float4 Specular;               // Offset: 14464
                //       float3 Position;               // Offset: 14480
                //       float Range;                   // Offset: 14492
                //       float3 Direction;              // Offset: 14496
                //       float Spot;                    // Offset: 14508
                //       float3 Att;                    // Offset: 14512
                //       float pad;                     // Offset: 14524
                //
                //   } gSpotLights[100];                // Offset: 14432 Size:  9600
                //   int spotLight_size;                // Offset: 24032 Size:     4
                //      = 0x00000000 
                //   float3 gEyePosW;                   // Offset: 24036 Size:    12
                //   float gFogStart;                   // Offset: 24048 Size:     4
                //   float gFogRange;                   // Offset: 24052 Size:     4
                //   float4 gFogColor;                  // Offset: 24064 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProjTex;        // Offset:  192 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  320 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gSsaoMap                          texture  float4          2d    2        1
                // gCubeMap                          texture  float4        cube    3        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 2   xyzw        5     NONE  float   xy w
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                                              { 0, 1.000000, 0, 0},
                                              { 0, 0, 1.000000, 0},
                                              { 0, 0, 0, 1.000000} }
                dcl_constantbuffer cb0[1505], dynamicIndexed
                dcl_constantbuffer cb1[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texturecube (float,float,float,float) t3
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v5.xyw
                dcl_output o0.xyzw
                dcl_temps 22
                
                #line 113 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 116
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[1502].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 119
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 122
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 130
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 137
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 155
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 238 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 241
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 258
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 261
                div r3.x, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 158 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                div r4.xy, v5.xyxx, v5.wwww  // pin<16:NaN:Inf,17:NaN:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
                mov r1.w, r1.w  // ambientAccess<0:Inf>
                
                #line 163
                ilt r3.w, l(0), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r4.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r5.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r6.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r7.xyz, cb0[0].xyzx  // L<0,1,2>
                  mov r8.xyz, cb0[1].xyzx  // L<4,5,6>
                  mov r9.xyz, cb0[2].xyzx  // L<8,9,10>
                  mov r10.xyz, cb0[3].xyzx  // L<12,13,14>
                  mov r11.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r10.xyz, -r10.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r4.xyz, r4.xyzx, r7.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r10.xyzx, r11.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r4.w, l(0.000000), r3.w
                  mov r7.xyz, -r10.xyzx
                  dp3 r5.w, r7.xyzx, r11.xyzx
                  add r5.w, r5.w, r5.w
                  mov r5.w, -r5.w
                  mul r10.xyz, r5.wwww, r11.xyzx
                  add r7.xyz, r7.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r5.w, r7.xyzx, r12.xyzx
                  max r5.w, r5.w, l(0.000000)
                  log r5.w, r5.w
                  mul r5.w, r5.w, r6.w
                  exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                  mul r5.xyz, r5.xyzx, r3.wwww
                  mul r5.xyz, r8.xyzx, r5.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r6.xyz, r6.xyzx, r5.wwww
                  mul r6.xyz, r9.xyzx, r6.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r5.xyz, r4.wwww, r5.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r6.xyz, r4.wwww, r6.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r4.xyz, r4.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r5.xyz, r5.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r6.xyz, r6.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r4.xyz, r1.wwww, r4.xyzx
                  add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r5.xyz, r3.xxxx, r5.xyzx
                  add r5.xyz, r5.yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r6.xyz, r3.xxxx, r6.xyzx
                  add r6.xyz, r6.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                else 
                  mov r4.xyzw, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>, diffuse<0: 0f>
                  mov r5.xy, l(0,0,0,0)  // diffuse<1: 0f,2: 0f>
                  mov r5.zw, l(0,0,0,0)  // spec<0: 0f,1: 0f>
                  mov r6.x, l(0)  // spec<2: 0f>
                endif 
                mov r7.x, r4.x  // ambient<0:NaN:Inf>
                mov r7.y, r4.y  // ambient<1:NaN:Inf>
                mov r7.z, r4.z  // ambient<2:NaN:Inf>
                mov r8.x, r4.w  // diffuse<0:NaN:Inf>
                mov r8.y, r5.x  // diffuse<1:NaN:Inf>
                mov r8.z, r5.y  // diffuse<2:NaN:Inf>
                mov r9.x, r5.z  // spec<0:NaN:Inf>
                mov r9.y, r5.w  // spec<1:NaN:Inf>
                mov r9.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(1), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r13.xyz, cb0[4].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[5].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[6].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[7].xyzx  // L<12,13,14>
                  mov r17.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r18.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r16.xyz, -r16.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r16.xyzx, r17.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r13.xyz, -r16.xyzx
                  dp3 r7.w, r13.xyzx, r17.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r16.xyz, r7.wwww, r17.xyzx
                  add r13.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r13.xyzx, r18.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r12.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r3.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r12.xyz, r12.xyzx, r7.wwww
                  mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r12.xyz, r6.wwww, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r7.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r8.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r9.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z
                  mov r4.xyzw, r4.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>, diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.y, r5.x  // diffuse<1:NaN:Inf>
                mov r7.z, r5.y  // diffuse<2:NaN:Inf>
                mov r8.x, r5.z  // spec<0:NaN:Inf>
                mov r8.y, r5.w  // spec<1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                ilt r3.w, l(2), cb0[400].x
                if_nz r3.w
                
                #line 166
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  mov r12.xyz, cb0[8].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[9].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[10].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[11].xyzx  // L<12,13,14>
                  mov r16.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r17.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 75 "LightHelper.fx"
                  mov r15.xyz, -r15.xyzx  // lightVec<0,1,2>
                
                #line 78
                  mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 83
                  dp3 r3.w, r15.xyzx, r16.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 87
                  lt r6.w, l(0.000000), r3.w
                  mov r12.xyz, -r15.xyzx
                  dp3 r7.w, r12.xyzx, r16.xyzx
                  add r7.w, r7.w, r7.w
                  mov r7.w, -r7.w
                  mul r15.xyz, r7.wwww, r16.xyzx
                  add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r7.w, r12.xyzx, r17.xyzx
                  max r7.w, r7.w, l(0.000000)
                  log r7.w, r7.w
                  mul r7.w, r7.w, r11.w
                  exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                  mul r10.xyz, r10.xyzx, r3.wwww
                  mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r11.xyzx, r7.wwww
                  mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                  movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 166 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 169
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r4.xyz, r4.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r5.xyz, r7.yzxy, r9.yzxy  // diffuse<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
                  mul r7.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r6.xyz, r7.zxyz, r8.zxyz  // spec<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 165
                  mov r4.w, r5.z  // diffuse<0:NaN:Inf>
                  mov r5.zw, r6.yyyz  // spec<0:NaN:Inf,1:NaN:Inf>
                endif 
                
                #line 174
                mov r3.w, l(0)  // i<0: 0>
                mov r6.yzw, r4.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.x, r4.w  // diffuse<0:NaN:Inf>
                mov r7.yz, r5.xxyx  // diffuse<1:NaN:Inf,2:NaN:Inf>
                mov r8.xy, r5.zwzz  // spec<0:NaN:Inf,1:NaN:Inf>
                mov r8.z, r6.x  // spec<2:NaN:Inf>
                mov r7.w, r3.w  // i<0>
                loop 
                  ilt r8.w, r7.w, cb0[901].x
                  breakc_z r8.w
                
                #line 177
                  nop 
                  mov r9.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r10.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r11.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r8.w, r7.w, l(5)
                  mov r12.xyz, cb0[r8.w + 401].xyzx  // L<0,1,2>
                  mov r13.xyz, cb0[r8.w + 402].xyzx  // L<4,5,6>
                  mov r14.xyz, cb0[r8.w + 403].xyzx  // L<8,9,10>
                  mov r15.xyz, cb0[r8.w + 404].xyzx  // L<12,13,14>
                  mov r9.w, cb0[r8.w + 404].w  // L<15>
                  mov r16.xyz, cb0[r8.w + 405].xyzx  // L<16,17,18>
                  mov r17.xyz, v1.xyzx  // pos<0,1,2>
                  mov r18.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r19.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 111 "LightHelper.fx"
                  mov r17.xyz, -r17.xyzx
                  add r15.xyz, r15.xyzx, r17.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 114
                  dp3 r8.w, r15.xyzx, r15.xyzx
                  sqrt r17.y, r8.w  // d<0:NaN:Inf>
                
                #line 117
                  lt r8.w, r9.w, r17.y
                
                #line 121
                  if_z r8.w
                    div r15.xyz, r15.xyzx, r17.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 124
                    mul r9.xyz, r9.xyzx, r12.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 129
                    dp3 r8.w, r15.xyzx, r18.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 133
                    lt r9.w, l(0.000000), r8.w
                    mov r12.xyz, -r15.xyzx
                    dp3 r10.w, r12.xyzx, r18.xyzx
                    add r10.w, r10.w, r10.w
                    mov r10.w, -r10.w
                    mul r15.xyz, r10.wwww, r18.xyzx
                    add r12.xyz, r12.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r10.w, r12.xyzx, r19.xyzx
                    max r10.w, r10.w, l(0.000000)
                    log r10.w, r10.w
                    mul r10.w, r10.w, r11.w
                    exp r10.w, r10.w  // specFactor<0:NaN:Inf>
                    mul r10.xyz, r10.xyzx, r8.wwww
                    mul r10.xyz, r13.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r10.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 133
                    movc r10.xyz, r9.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r11.xyz, r9.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                    mul r17.z, r17.y, r17.y
                    mov r17.x, l(1.000000)
                    dp3 r8.w, r16.xyzx, r17.xyzx
                    div r8.w, l(1.000000), r8.w  // att<0:NaN:Inf>
                    mul r10.xyz, r8.wwww, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r8.wwww, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                  else 
                    mov r9.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r10.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 177 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                  mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  mul r9.xyz, r1.wwww, r9.xyzx
                  add r6.yzw, r6.yyzw, r9.xxyz  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r8.w, r7.w
                  mov r3.y, l(1.000000)
                  dp3 r3.y, r3.xyyx, icb[r8.w + 0].xyzx
                  mul r9.xyz, r10.xyzx, r3.yyyy
                  add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r11.xyzx, r3.yyyy
                  add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 174
                  iadd r7.w, r7.w, l(1)  // i<0>
                endloop 
                
                #line 185
                mov r4.xyz, r6.yzwy  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.y, r3.w  // i<0>
                loop 
                  ilt r4.w, r3.y, cb0[1502].x
                  breakc_z r4.w
                
                #line 188
                  nop 
                  mov r10.xyz, cb1[24].xyzx  // mat<0,1,2>
                  mov r11.xyz, cb1[25].xyzx  // mat<4,5,6>
                  mov r12.xyzw, cb1[26].xyzw  // mat<8,9,10,11>
                  imul null, r4.w, r3.y, l(6)
                  mov r13.xyz, cb0[r4.w + 902].xyzx  // L<0,1,2>
                  mov r14.xyz, cb0[r4.w + 903].xyzx  // L<4,5,6>
                  mov r15.xyz, cb0[r4.w + 904].xyzx  // L<8,9,10>
                  mov r16.xyz, cb0[r4.w + 905].xyzx  // L<12,13,14>
                  mov r17.xyz, cb0[r4.w + 906].xyzx  // L<16,17,18>
                  mov r18.xyz, cb0[r4.w + 907].xyzx  // L<20,21,22>
                  mov r5.w, cb0[r4.w + 905].w  // L<15>
                  mov r4.w, cb0[r4.w + 906].w  // L<19>
                  mov r19.xyz, v1.xyzx  // pos<0,1,2>
                  mov r20.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r21.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 163 "LightHelper.fx"
                  mov r19.xyz, -r19.xyzx
                  add r16.xyz, r16.xyzx, r19.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 166
                  dp3 r6.x, r16.xyzx, r16.xyzx
                  sqrt r19.y, r6.x  // d<0:NaN:Inf>
                
                #line 169
                  lt r5.w, r5.w, r19.y
                
                #line 173
                  if_z r5.w
                    div r16.xyz, r16.xyzx, r19.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 176
                    mul r10.xyz, r10.xyzx, r13.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 181
                    dp3 r5.w, r16.xyzx, r20.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 185
                    lt r6.x, l(0.000000), r5.w
                    mov r13.xyz, -r16.xyzx
                    dp3 r7.w, r13.xyzx, r20.xyzx
                    add r7.w, r7.w, r7.w
                    mov r7.w, -r7.w
                    mul r16.xyz, r7.wwww, r20.xyzx
                    add r16.xyz, r13.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r7.w, r16.xyzx, r21.xyzx
                    max r7.w, r7.w, l(0.000000)
                    log r7.w, r7.w
                    mul r7.w, r7.w, r12.w
                    exp r7.w, r7.w  // specFactor<0:NaN:Inf>
                    mul r11.xyz, r11.xyzx, r5.wwww
                    mul r11.xyz, r14.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r7.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                    movc r11.xyz, r6.xxxx, r11.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r12.xyz, r6.xxxx, r12.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 195
                    dp3 r5.w, r13.xyzx, r17.xyzx
                    max r5.w, r5.w, l(0.000000)
                    log r5.w, r5.w
                    mul r4.w, r4.w, r5.w
                    exp r4.w, r4.w  // spot<0:NaN:Inf>
                
                #line 198
                    mul r19.z, r19.y, r19.y
                    mov r19.x, l(1.000000)
                    dp3 r5.w, r18.xyzx, r19.xyzx
                    div r5.w, r4.w, r5.w  // att<0:NaN:Inf>
                    mul r10.xyz, r4.wwww, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r11.xyz, r5.wwww, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r12.xyz, r5.wwww, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  else 
                    mov r10.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                    mov r11.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                    mov r12.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                  endif 
                
                #line 188 "C:\Users\JS\Documents\GitRepository\DX_Portfolio\FX\Basic.fx"
                  mov r10.xyz, r10.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r11.xyz, r11.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r12.xyz, r12.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 191
                  mul r10.xyz, r1.wwww, r10.xyzx
                  add r4.xyz, r4.xyzx, r10.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mov r4.w, r3.y
                  mov r3.z, l(1.000000)
                  dp3 r3.z, r3.xzzx, icb[r4.w + 0].xyzx
                  mul r10.xyz, r11.xyzx, r3.zzzz
                  add r5.xyz, r5.xyzx, r10.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r12.xyzx, r3.zzzz
                  add r9.xyz, r9.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 185
                  iadd r3.y, r3.y, l(1)  // i<0>
                endloop 
                
                #line 197
                add r3.xyz, r4.xyzx, r5.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r9.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 201
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t3.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[27].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 215
                mov r1.x, -cb0[1503].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[1503].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 218
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[1504].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r0.w, r2.w, cb1[25].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 388 instruction slots used
                            
            };
        }

    }

}

